{"version":3,"sources":["components/Auth/AuthNav/AuthNav.jsx","components/Auth/Register/Register.jsx","components/Auth/Login/Login.jsx","components/Auth/WelcomeSection/WelcomeSection.jsx","components/Auth/Auth.jsx","components/UI/CustomSelect.jsx","components/Main/MainNav/MainNav.jsx","components/Main/Settings/Settings.jsx","components/Main/MyInfo/UpdateSkills/UpdateSkills.jsx","components/Main/MyInfo/UpdateQualifications/UpdateQualification.jsx","components/Main/MyInfo/Skills/Skills.jsx","components/Main/MyInfo/Qualifications/Qualifications.jsx","components/UI/LoadingScreen.jsx","components/Main/MyInfo/MyInfo.jsx","components/Main/Reports/Report/ReportTable/ReportTableRow/ReportUpdateTask/ReportUpdateTask.jsx","components/Main/Reports/Report/ReportTable/ReportTableRow/ReportTableRow.jsx","components/Main/Reports/Report/ReportTable/ReportTableRow/ReportTableHeader/ReportTableHeader.jsx","components/UI/LoadingScreenSmall.jsx","components/Main/Reports/Report/ReportTable/ReportTableAllTasks/ReportTableAllTasks.jsx","components/Main/Reports/Report/ReportTable/ReportTable.jsx","components/Main/Reports/Report/Report.jsx","components/Main/Reports/Reports.jsx","components/Main/Reports/Report/ReportQuery/ReportQuery.jsx","components/Main/AdminRecruitTeam/AdminRecrutTeam.jsx","components/Main/Activities/Activities.jsx","components/Main/Main.jsx","models/auth.js","models/profile.js","models/report.js","models/store.js","models/admin.js","App.jsx","index.js"],"names":["AuthNav","currentAuth","setAuth","resolveAuthClassNclassName","authType","id","className","href","onClick","e","preventDefault","Register","useState","email","setEmail","password","setPassword","cpassword","setCPassword","errors","useStoreState","state","auth","registerSubmit","useStoreActions","action","setErrors","pwdError","find","err","type","cpwdError","emailError","noValidate","onSubmit","htmlFor","name","placeholder","value","onChange","target","length","message","Login","loginSubmit","iwdCred","console","log","WelcomeSection","Auth","setProfile","profile","getProfile","clearProfile","getAllUsers","isAuth","useEffect","localStorage","getItem","to","CustomSelect","options","selectValue","isStatic","required","isVisible","setVisible","inputValue","setValue","onMouseEnter","onMouseLeave","replace","autoComplete","autoCorrect","autoSave","readOnly","some","option","map","correctOption","key","filter","includes","MainNav","isAuthAlter","src","alt","srcset","width","window","location","pathname","Settings","prevEmail","prevFname","fname","prevLname","lname","prevSex","sex","prevSem","sem","prevDob","dob","prevPhone","phone","prevAddress1","address_line1","prevAddress2","address_line2","prevCity","city","prevDist","dist","prevState","prevPin","pin","prevaboutme","aboutme","prevbranch","branch","isDone","setDone","updateProfile","setSex","setSem","setbranch","setFname","setLname","Date","toLocaleDateString","setDob","setPhone","setaddress_line1","setaddress_line2","setCity","setDist","setSt","setPin","setaboutme","a","match","isNaN","slice","UpdateSkills","skills","setSkills","title","setTitle","updateSkills","for","UpdateQualification","qualification","setQualification","college","setCollege","board","setBoard","grade","setGrade","updateQualification","max","min","Skills","item","Qualifications","quala","LoadingScreen","MyInfo","isLoading","ReportUpdateTask","tdesc","setTDesc","dependency","setDependency","category","setCategory","globalVisibility","setGlobalVisibility","ReportTableRow","task","setCurrentUserId","setUserTasksVisible","stime","setSTime","etime","setETime","etask","setETask","stask","setSTask","progress","setProgress","newskill","setNewskill","kgain","setKgain","comment","setComment","user_id","updateTask","admin","setUserTasksLoading","deleteTask","updateComment","isAuthUser","task_description","status_sod","status_eod","new_skills_acquired","knowledge_gained","reportId","reportid","userId","startStatus","startTime","endStatus","endTime","knowledegeGained","newSkills","assignedby","ReportTableHeader","LoadingScreenSmall","ReportTableAllTasks","activityId","isUserTasksVisible","fetchAllUserTasks","userTasks","isUserTasksLoading","class","colspan","ReportTable","tasks","suid","team","activityid","milestone","setActivityTasks","fetchActivityTask","isAssignTaskVisible","setAssignTaskVisible","newTasks","setNTask","member","setTasks","setName","currentUserId","isAnyTasks","every","Report","report","isTaskLoading","setTaskLoading","taskMilestone","setMilestone","activity_title","work","activity_type","setTask","Reports","activities","ReportQuery","users","AdminRecruitTeam","field","setField","members","setMembers","superVisor","setSupervisor","activityType","setActivityType","activityTitle","setActivityTitle","submitActivityTeam","str","parseInt","super_id","reqired","user","payload","existMember","Activities","fetchActivities","ProtectedRoute","Component","component","rest","Main","exact","path","render","clear","setType","isSuper","setSuper","setUsers","thunk","axios","post","data","setItem","token","response","get","headers","then","allUsers","catch","removeItem","setLoading","domainId","aboutMe","i","attendance","setTimeout","skill","isTasksLoading","setTasksLoading","fetchTasks","domains","setUserTasks","setDomains","domain","setActivityTask","activity","setActivities","isAdmin","incompleteActivity","fetchDomains","delete","store","createStore","initStore","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.970aef44.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AuthNav({ currentAuth, setAuth }) {\r\n  function resolveAuthClassNclassName(authType) {\r\n    return authType === currentAuth\r\n      ? \"pd-24x pd-12y current\"\r\n      : \" pd-24x pd-12y\";\r\n  }\r\n  return (\r\n    <nav id=\"auth-nav\" className=\"nav-t1\">\r\n      <ul className=\"mr-32b\">\r\n        <li>\r\n          <a\r\n            href=\"#auth-register\"\r\n            className={resolveAuthClassNclassName(\"Register\")}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setAuth(\"Register\");\r\n            }}\r\n          >\r\n            Register\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"#auth-login\"\r\n            className={resolveAuthClassNclassName(\"Login\")}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setAuth(\"Login\");\r\n            }}\r\n          >\r\n            Login\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nfunction Register({ currentAuth, setAuth }) {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [cpassword, setCPassword] = useState(\"\");\r\n  let errors = useStoreState(state => state.auth.errors);\r\n  let registerSubmit = useStoreActions(action => action.auth.registerSubmit);\r\n  let setErrors = useStoreActions(action => action.auth.setErrors);\r\n  let pwdError = errors.find(err => err.type === \"password\");\r\n  let cpwdError = errors.find(err => err.type === \"cpassword\");\r\n  let emailError = errors.find(err => err.type === \"email\");\r\n  return (\r\n    <form\r\n      id=\"auth-register\"\r\n      action=\"\"\r\n      className=\"flex-basis-50-l pd-64x pd-64t bg-light pd-64b\"\r\n      noValidate={true}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        registerSubmit({ email, password, cpassword });\r\n      }}\r\n    >\r\n      <h2 className=\"prim-text-clr\">Register your account</h2>\r\n      <p className=\"lh-16 mr-16t mr-32b\">\r\n        Please enter the same email as entered in the AtarV-Ed membership form.\r\n        Verification email will be sent after form submission.\r\n      </p>\r\n      <AuthNav currentAuth={currentAuth} setAuth={setAuth} />\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"email\">\r\n        Email\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {emailError ? <p className=\"form-hint\">{emailError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"password\">\r\n        Password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        value={password}\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {pwdError ? <p className=\"form-hint\">{pwdError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"cpassword\">\r\n        Confirm password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"cpassword\"\r\n        id=\"cpassword\"\r\n        placeholder=\"Please confirm your password\"\r\n        value={cpassword}\r\n        onChange={e => {\r\n          setCPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {cpwdError ? <p className=\"form-hint\">{cpwdError.message}</p> : null}\r\n      <input\r\n        className=\"mr-16t mr-8b form-inp wi-300\"\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nfunction Login({ currentAuth, setAuth }) {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let errors = useStoreState(state => state.auth.errors);\r\n  let loginSubmit = useStoreActions(action => action.auth.loginSubmit);\r\n  let setErrors = useStoreActions(action => action.auth.setErrors);\r\n  let pwdError = errors.find(err => err.type === \"password\");\r\n  let emailError = errors.find(err => err.type === \"email\");\r\n  let iwdCred = errors.find(err => err.type === \"Invalid Credentials\");\r\n  return (\r\n    <form\r\n      id=\"auth-login\"\r\n      action=\"POST\"\r\n      className=\"flex-basis-50-l pd-64x pd-64t bg-light pd-64b\"\r\n      noValidate={true}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        loginSubmit({ email, password });\r\n      }}\r\n    >\r\n      <h2 className=\"prim-text-clr\">Log into your account</h2>\r\n      <p className=\"lh-16 mr-16t mr-32b\">\r\n        Please make sure that you have registered before trying to log in.\r\n      </p>\r\n      <AuthNav currentAuth={currentAuth} setAuth={setAuth} />\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"email\">\r\n        Email\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        value={email}\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n          console.log(errors);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n        placeholder=\"Enter your email\"\r\n      />\r\n      {emailError ? <p className=\"form-hint\">{emailError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"password\">\r\n        Password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        value={password}\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n        placeholder=\"Enter your password\"\r\n      />\r\n      {pwdError ? <p className=\"form-hint\">{pwdError.message}</p> : null}\r\n      <input\r\n        className=\"mr-16t mr-8b form-inp wi-300\"\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n      />\r\n\r\n      {iwdCred ? <p className=\"form-hint\">{iwdCred.message}</p> : null}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction WelcomeSection() {\r\n  return (\r\n    <article className=\"pd-64x pd-64t flex-basis-50-l\">\r\n      <h2 className=\"mr-32b\">Welcome</h2>\r\n      <p className=\"lh-16\">\r\n        Please login or register to access the AtarV-Ed portal facility which\r\n        provides tools to track your personal and domain's progress.\r\n      </p>\r\n      <div className=\"side-note mr-32t lh-16\">\r\n        <p>\r\n          Please note - You must be already a core member of AtarV-Ed to be able\r\n          to register\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default WelcomeSection;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Register from \"./Register/Register\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Login from \"./Login/Login\";\r\nimport WelcomeSection from \"./WelcomeSection/WelcomeSection\";\r\nimport \"./auth.css\";\r\n\r\nfunction Auth() {\r\n  let [currentAuth, setAuth] = useState(\"Login\");\r\n  let setProfile = useStoreActions(action => action.profile.setProfile);\r\n  let getProfile = useStoreActions(action => action.profile.getProfile);\r\n  let clearProfile = useStoreActions(action => action.auth.setProfile);\r\n  let getAllUsers = useStoreActions(action => action.auth.getAllUsers);\r\n  let isAuth = useStoreState(state => state.auth.isAuth);\r\n  let profile = useStoreState(state => state.auth.profile);\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      if (localStorage.getItem(\"token\")) {\r\n        getAllUsers(getProfile);\r\n      }\r\n    }\r\n  }, [isAuth, profile, setProfile, clearProfile, getAllUsers]);\r\n  if (!isAuth)\r\n    return (\r\n      <section id=\"auth\" className=\"disp-flex\">\r\n        <WelcomeSection />\r\n        {currentAuth === \"Register\" ? (\r\n          <Register currentAuth={currentAuth} setAuth={setAuth} />\r\n        ) : (\r\n          <Login currentAuth={currentAuth} setAuth={setAuth} />\r\n        )}\r\n      </section>\r\n    );\r\n  else\r\n    return (\r\n      <Redirect to={currentAuth === \"Register\" ? \"/settings\" : \"/activities\"} />\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CustomSelect({\r\n  placeholder,\r\n  options,\r\n  selectValue,\r\n  value,\r\n  isStatic,\r\n  required\r\n}) {\r\n  let [isVisible, setVisible] = useState(false);\r\n  let [inputValue, setValue] = useState(value);\r\n  let [errors, setErrors] = useState(\"\");\r\n  return (\r\n    <div\r\n      className=\"pos-cont  wi-80p \"\r\n      onMouseEnter={e => {\r\n        console.log(\"triggered\", isVisible);\r\n        setVisible(true);\r\n      }}\r\n      onMouseLeave={e => {\r\n        console.log(\"triggered\", isVisible);\r\n        setVisible(false);\r\n      }}\r\n    >\r\n      <input\r\n        className=\"form-inp cu-po wi-100p\"\r\n        type=\"customselect\"\r\n        name=\"customselecct\"\r\n        id=\"fname\"\r\n        value={inputValue.replace(/\\d+/, \"\")}\r\n        placeholder={placeholder}\r\n        autoComplete={false}\r\n        autoCorrect={false}\r\n        autoSave={false}\r\n        required={required}\r\n        readOnly={isStatic}\r\n        onChange={e => {\r\n          setVisible(true);\r\n          if (!options.some(option => option !== e.target.value))\r\n            setErrors(\"Enter a valid option\");\r\n          setValue(e.target.value);\r\n        }}\r\n      />\r\n      {errors ? <p className=\"form-hint\">{errors}</p> : null}\r\n      <div className=\"pos-abs-top-left z-3\">\r\n        <ul>\r\n          {isVisible\r\n            ? !isStatic\r\n              ? options\r\n                  .filter(option => option.includes(inputValue))\r\n                  .map(correctOption => (\r\n                    <li\r\n                      key={correctOption}\r\n                      onClick={e => {\r\n                        selectValue(correctOption);\r\n                        setErrors(\"\");\r\n                        setValue(correctOption);\r\n                        setVisible(!isVisible);\r\n                      }}\r\n                      className=\"option-cust bg-light cu-po wi-100p\"\r\n                    >\r\n                      {correctOption.replace(/\\d+/, \"\")}\r\n                    </li>\r\n                  ))\r\n              : options.map(correctOption => (\r\n                  <li\r\n                    onClick={e => {\r\n                      selectValue(correctOption);\r\n                      setValue(correctOption);\r\n                      setVisible(!isVisible);\r\n                    }}\r\n                    key={correctOption}\r\n                    className=\"option-cust bg-light cu-po wi-100p\"\r\n                  >\r\n                    {correctOption.replace(/\\d+/, \"\")}\r\n                  </li>\r\n                ))\r\n            : null}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nfunction MainNav() {\r\n  let authType = useStoreState(state => state.profile.type);\r\n  let { type: isAuthAlter } = useStoreState(state => state.auth.profile);\r\n  return (\r\n    <nav className=\"sidenav bg-light\">\r\n      <div className=\"sidenav-content\">\r\n        <header className=\"disp-flex fl-dir-col\">\r\n          <img\r\n            className=\"disp-ib mr-16 al-self-c\"\r\n            src=\"./atarvEd.png\"\r\n            alt=\"AthartV-Ed Logo\"\r\n            srcset=\"\"\r\n            width=\"100px\"\r\n          />\r\n          <p className=\"al-self-c fs-14 txt-align-center lh-16\">\r\n            {\" \"}\r\n            Learning Management Module\r\n          </p>\r\n        </header>\r\n        <ul className=\"nav-list mr-32t mr-32b\">\r\n          <li>\r\n            <Link\r\n              to=\"/activities\"\r\n              className={\r\n                window.location.pathname === \"/activities\"\r\n                  ? \"mr-24l pd-16 current-nav\"\r\n                  : \"mr-24l pd-16\"\r\n              }\r\n            >\r\n              <p className=\"mr-12r disp-ib\">Activities</p>\r\n            </Link>\r\n          </li>\r\n          {authType !== \"A\" && isAuthAlter !== \"A\" ? (\r\n            <>\r\n              <li>\r\n                <Link\r\n                  to=\"/myinfo\"\r\n                  className={\r\n                    window.location.pathname === \"/myinfo\"\r\n                      ? \"mr-24l pd-16 current-nav\"\r\n                      : \"mr-24l pd-16\"\r\n                  }\r\n                >\r\n                  <p className=\"mr-12r disp-ib\">My info</p>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to=\"/settings\"\r\n                  className={\r\n                    window.location.pathname === \"/settings\"\r\n                      ? \"mr-24l pd-16 current-nav\"\r\n                      : \"mr-24l pd-16\"\r\n                  }\r\n                >\r\n                  <p className=\"mr-12r disp-ib\">Settings</p>\r\n                </Link>\r\n              </li>\r\n            </>\r\n          ) : null}\r\n          <li>\r\n            <Link to=\"/logout\" className=\"mr-24l pd-16\">\r\n              <p className=\"mr-12r disp-ib\">Logout</p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default MainNav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport CustomSelect from \"../../UI/CustomSelect\";\r\nimport MainNav from \"../MainNav/MainNav\";\r\n\r\nfunction Settings() {\r\n  let prevEmail = useStoreState(state => state.profile.email);\r\n  let prevFname = useStoreState(state => state.profile.fname);\r\n  let prevLname = useStoreState(state => state.profile.lname);\r\n  let prevSex = useStoreState(state => state.profile.sex);\r\n  let prevSem = useStoreState(state => state.profile.sem);\r\n  let prevDob = useStoreState(state => state.profile.dob);\r\n  let prevPhone = useStoreState(state => state.profile.phone);\r\n  let prevAddress1 = useStoreState(state => state.profile.address_line1);\r\n  let prevAddress2 = useStoreState(state => state.profile.address_line2);\r\n  let prevCity = useStoreState(state => state.profile.city);\r\n  let prevDist = useStoreState(state => state.profile.dist);\r\n  let prevState = useStoreState(state => state.profile.state);\r\n  let prevPin = useStoreState(state => state.profile.pin);\r\n  let prevaboutme = useStoreState(state => state.profile.aboutme);\r\n  let prevbranch = useStoreState(state => state.profile.branch);\r\n  let isDone = useStoreState(state => state.profile.isDone);\r\n  let setDone = useStoreActions(action => action.profile.setDone);\r\n\r\n  let updateProfile = useStoreActions(action => action.profile.updateProfile);\r\n\r\n  let [sex, setSex] = useState(prevSex || \"Male\");\r\n  let [sem, setSem] = useState(\"\" + prevSem || \"First1\");\r\n  let [branch, setbranch] = useState(prevbranch || \"Computer Science\");\r\n  let [fname, setFname] = useState(prevFname || \"\");\r\n  let [lname, setLname] = useState(prevLname || \"\");\r\n  let [dob, setDob] = useState(new Date(prevDob).toLocaleDateString() || \"\");\r\n  let [email, setEmail] = useState(prevEmail || \"\");\r\n  let [phone, setPhone] = useState(prevPhone || \"\");\r\n  let [address_line1, setaddress_line1] = useState(prevAddress1 || \"\");\r\n  let [address_line2, setaddress_line2] = useState(prevAddress2 || \"\");\r\n  let [city, setCity] = useState(prevCity || \"\");\r\n  let [dist, setDist] = useState(prevDist || \"\");\r\n  let [state, setSt] = useState(prevState || \"\");\r\n  let [pin, setPin] = useState(prevPin || \"\");\r\n  let [aboutme, setaboutme] = useState(prevaboutme || \"\");\r\n\r\n  useEffect(() => {\r\n    setDone(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      <section id=\"settings\" className=\"flex-basis-70-l bg-lights pd-32\">\r\n        <h2 className=\"mr-8b fs-24\">Edit your basic info</h2>\r\n        <form\r\n          id=\"profile-edit\"\r\n          action=\"\"\r\n          className=\"disp-flex fl-jc-fs\"\r\n          onSubmit={async e => {\r\n            e.preventDefault();\r\n            try {\r\n              updateProfile({\r\n                sex,\r\n                branch,\r\n                fname,\r\n                lname,\r\n                sem: sem.match(/\\d+/)[0],\r\n                dob,\r\n                email,\r\n                phone,\r\n                address_line1,\r\n                address_line2,\r\n                city,\r\n                dist,\r\n                state,\r\n                pin,\r\n                aboutme\r\n              });\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          }}\r\n        >\r\n          <section className=\"mr-12r flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"fname\">\r\n              First name\r\n            </label>\r\n            <input\r\n              className=\"mr-8b form-inp\"\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              id=\"fname\"\r\n              placeholder=\"Enter your first name\"\r\n              value={fname}\r\n              onChange={e => setFname(e.target.value)}\r\n            />\r\n          </section>\r\n          <section className=\"flex-basis-20-l mr-12r \">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"lname\">\r\n              Last name\r\n            </label>\r\n            <input\r\n              className=\"mr-8b form-inp\"\r\n              type=\"text\"\r\n              name=\"lname\"\r\n              id=\"lname\"\r\n              placeholder=\"Enter your last name\"\r\n              value={lname}\r\n              onChange={e => setLname(e.target.value)}\r\n            />\r\n          </section>\r\n          <section className=\"mr-12r flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"dob\">\r\n              Date of birth\r\n            </label>\r\n            <input\r\n              className=\"mr-8b form-inp\"\r\n              type=\"date\"\r\n              name=\"dob\"\r\n              id=\"dob\"\r\n              placeholder=\"Enter your date of birth\"\r\n              value={dob}\r\n              onChange={e => setDob(e.target.value)}\r\n            />\r\n          </section>\r\n          <section className=\"flex-basis-20-l  mr-12r\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"sem\">\r\n              Sem\r\n            </label>\r\n            <CustomSelect\r\n              options={[\r\n                \"First1\",\r\n                \"Second2\",\r\n                \"Third3\",\r\n                \"Fourth4\",\r\n                \"Fifth5\",\r\n                \"Sixth6\",\r\n                \"Seventh7\",\r\n                \"Eigth8\"\r\n              ]}\r\n              isStatic={true}\r\n              placeholder={\"Enter your sem\"}\r\n              value={sem + \"\" || \"First1\"}\r\n              selectValue={setSem}\r\n              required={true}\r\n            />\r\n          </section>\r\n          <section className=\"flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"sex\">\r\n              Sex\r\n            </label>\r\n            <CustomSelect\r\n              options={[\"Male\", \"Female\", \"Others\"]}\r\n              isStatic={true}\r\n              placeholder={\"Enter your sex\"}\r\n              value={sex + \"\"}\r\n              selectValue={setSex}\r\n              required={true}\r\n            />\r\n          </section>\r\n          <section className=\"mr-12r flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"mr-8b form-inp\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n            />\r\n          </section>\r\n          <section className=\"mr-12r flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"phone\">\r\n              Phone\r\n            </label>\r\n            <input\r\n              className=\"mr-8b form-inp\"\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              placeholder=\"Enter your phone\"\r\n              value={phone}\r\n              onChange={e => {\r\n                if (!isNaN(e.target.value))\r\n                  setPhone(e.target.value.slice(0, 10));\r\n              }}\r\n            />\r\n          </section>\r\n          <section className=\"flex-basis-20-l\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"Brach\">\r\n              Branch\r\n            </label>\r\n            <CustomSelect\r\n              options={[\r\n                \"Compter Science\",\r\n                \"Electronics and Commnication\",\r\n                \"Electrical and Electronics\",\r\n                \"Civil\",\r\n                \"Biotechnology\",\r\n                \"Information Science\"\r\n              ]}\r\n              isStatic={true}\r\n              placeholder={\"Enter your departmeent\"}\r\n              value={branch}\r\n              selectValue={setbranch}\r\n              required={true}\r\n            />\r\n          </section>\r\n          <section className=\"flex-basis-70-l mr-16t mr-12r\">\r\n            <h3 className=\"fs-18 mr-4t mr-8b\">Address</h3>\r\n            <section className=\" disp-flex fl-dir-col mr-12r\">\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"address_line1\">\r\n                  Address line 1\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"address_line1\"\r\n                  id=\"address_line1\"\r\n                  placeholder=\"Enter address line 1\"\r\n                  value={address_line1}\r\n                  onChange={e => setaddress_line1(e.target.value)}\r\n                />\r\n              </section>\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"address_line1\">\r\n                  Address line 2\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"address_line2\"\r\n                  id=\"address_line1\"\r\n                  placeholder=\"Enter address line 2\"\r\n                  value={address_line2}\r\n                  onChange={e => setaddress_line2(e.target.value)}\r\n                />\r\n              </section>\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"city\">\r\n                  City\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  placeholder=\"Enter your city\"\r\n                  value={city}\r\n                  onChange={e => setCity(e.target.value)}\r\n                />\r\n              </section>\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"dist_st\">\r\n                  District\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"dist\"\r\n                  id=\"dist\"\r\n                  placeholder=\"Enter your District\"\r\n                  value={dist}\r\n                  onChange={e => setDist(e.target.value)}\r\n                />\r\n              </section>\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"dist_st\">\r\n                  State\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"st\"\r\n                  id=\"st\"\r\n                  placeholder=\"Enter your State\"\r\n                  value={state}\r\n                  onChange={e => setSt(e.target.value)}\r\n                />\r\n              </section>\r\n              <section className=\"wi-100p\">\r\n                <label className=\"mr-4t form-labl\" htmlFor=\"pin\">\r\n                  Pin\r\n                </label>\r\n                <input\r\n                  className=\"mr-8b form-inp wi-100p\"\r\n                  type=\"text\"\r\n                  name=\"pin\"\r\n                  id=\"pin\"\r\n                  placeholder=\"Enter your pin\"\r\n                  value={pin}\r\n                  onChange={e => {\r\n                    if (!isNaN(e.target.value))\r\n                      setPin(e.target.value.slice(0, 6));\r\n                  }}\r\n                />\r\n              </section>\r\n            </section>\r\n          </section>\r\n          <section className=\"mr-12r flex-basis-50-l disp-flex fl-dir-col\">\r\n            <label className=\"mr-16t form-labl\" htmlFor=\"about_you\">\r\n              About you\r\n            </label>\r\n            <textarea\r\n              className=\"mr-4b form-inp\"\r\n              name=\"about_you\"\r\n              id=\"about_you\"\r\n              placeholder=\"Enter a brief aboutmeription about yourself\"\r\n              value={aboutme}\r\n              onChange={e => setaboutme(e.target.value)}\r\n            ></textarea>\r\n            <input\r\n              className=\"mr-16t mr-4b form-inp wi-300 al-self-r\"\r\n              type=\"submit\"\r\n              value=\"Save changes\"\r\n            />\r\n          </section>\r\n        </form>\r\n        {isDone ? (\r\n          <div className=\"card mr-16 pd-16 bg-prim-grad wi-100p pos-fixed-top\">\r\n            Updates done successfully\r\n          </div>\r\n        ) : null}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction UpdateSkills() {\r\n  let [isVisible, setVisible] = useState(false);\r\n  let [skills, setSkills] = useState(\"\");\r\n  let [title, setTitle] = useState(\"\");\r\n  let updateSkills = useStoreActions(action => action.profile.updateSkills);\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"blk btn fs-16 mr-16b\"\r\n        onClick={e => {\r\n          setVisible(!isVisible);\r\n        }}\r\n      >\r\n        Add a newly aquired skill\r\n      </button>\r\n      {isVisible ? (\r\n        <form\r\n          action=\"\"\r\n          className=\"bg-lgray card pd-16 mr-32b\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            updateSkills({ skills, title });\r\n          }}\r\n        >\r\n          <h3 className=\"fs-18 mr-16b\">Submit a new skill</h3>\r\n          <label for=\"skill\" className=\"form-labl\">\r\n            Skill type\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-inp\"\r\n            name=\"skill\"\r\n            id=\"skill\"\r\n            placeholder=\"Enter the skill type\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n          <label for=\"skill-description\" className=\"form-labl mr-16t\">\r\n            Skill description\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-inp\"\r\n            name=\"skill-description\"\r\n            id=\"skill-description\"\r\n            placeholder=\"Describe the skils under this type\"\r\n            value={skills}\r\n            onChange={e => setSkills(e.target.value)}\r\n          />\r\n          <section className=\"disp-flex fl-jc-fe\">\r\n            <button\r\n              className=\"btn disp-ib fs-16 mr-8t mr-12r\"\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                setVisible(!isVisible);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className=\"blk disp-ib btn fs-16 mr-8t\">\r\n              Submit skill\r\n            </button>\r\n          </section>\r\n        </form>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateSkills;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction UpdateQualification() {\r\n  let [isVisible, setVisible] = useState(false);\r\n  let [qualification, setQualification] = useState(\"\");\r\n  let [college, setCollege] = useState(\"\");\r\n  let [board, setBoard] = useState(\"\");\r\n  let [grade, setGrade] = useState(\"\");\r\n\r\n  let updateQualification = useStoreActions(\r\n    action => action.profile.updateQualification\r\n  );\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"blk btn fs-16 mr-16b\"\r\n        onClick={e => {\r\n          setVisible(!isVisible);\r\n        }}\r\n      >\r\n        Add a educational qualification\r\n      </button>\r\n      {isVisible ? (\r\n        <form\r\n          action=\"\"\r\n          className=\"bg-lgray card pd-16 mr-32b\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            updateQualification({ qualification, college, grade, board });\r\n          }}\r\n        >\r\n          <h3 className=\"fs-18 mr-16b\">Educational qualification</h3>\r\n          <label for=\"qualification\" className=\"form-labl\">\r\n            Qualification type\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-inp\"\r\n            name=\"qualification\"\r\n            id=\"qualification\"\r\n            placeholder=\"Enter the qualification type\"\r\n            value={qualification}\r\n            onChange={e => setQualification(e.target.value)}\r\n          />\r\n          <label for=\"college\" className=\"form-labl mr-16t\">\r\n            College\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-inp\"\r\n            name=\"college\"\r\n            id=\"college\"\r\n            placeholder=\"Enter the college name\"\r\n            value={college}\r\n            onChange={e => setCollege(e.target.value)}\r\n          />\r\n          <label for=\"board\" className=\"form-labl mr-16t\">\r\n            Board\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-inp\"\r\n            name=\"board\"\r\n            id=\"board\"\r\n            placeholder=\"Enter your board of education\"\r\n            value={board}\r\n            onChange={e => setBoard(e.target.value)}\r\n          />\r\n\r\n          <label for=\"grade\" className=\"form-labl mr-16t\">\r\n            Grade\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            max={100}\r\n            min={0}\r\n            className=\"form-inp\"\r\n            name=\"grade\"\r\n            id=\"grade\"\r\n            placeholder=\"Enter grade\"\r\n            value={grade}\r\n            onChange={e => setGrade(e.target.value)}\r\n          />\r\n          <section className=\"disp-flex fl-jc-fe\">\r\n            <button\r\n              className=\"btn disp-ib fs-16 mr-8t mr-12r\"\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                setVisible(!isVisible);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className=\"blk disp-ib btn fs-16 mr-8t\">Submit</button>\r\n          </section>\r\n        </form>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateQualification;\r\n","import React from \"react\";\r\n\r\nfunction Skills({ skills }) {\r\n  return skills && skills.length ? (\r\n    skills.map(item => (\r\n      <article className=\"pd-16y pd-8x\" key={skills.title}>\r\n        <h3 className=\"fs-18 mr-8b\">{item.title}</h3>\r\n        <p className=\"fs-16 tx-hier-3 mr-8b\">{item.skills}</p>\r\n      </article>\r\n    ))\r\n  ) : (\r\n    <p className=\"fs-16 tx-hier-3 mr-8b\">No skills added</p>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\n\r\nfunction Qualifications({ qualification }) {\r\n  return qualification && qualification.length ? (\r\n    qualification.map(quala => (\r\n      <article\r\n        className=\"pd-16y pd-8x disp-flex fl-jc-sb\"\r\n        key={quala.qualification}\r\n      >\r\n        <article>\r\n          <h3 className=\"fs-18 mr-8b\">{quala.qualification}</h3>\r\n          <p className=\"fs-14 mr-8b tx-hier-2\">{quala.college}</p>\r\n          <p className=\"fs-16 tx-hier-3 mr-8b\">{quala.board}</p>\r\n        </article>\r\n        <article className=\"al-self-c\">\r\n          <p className=\"mr-8b\">Grade</p>\r\n          <p className=\"fs-32 bold-josef mr-8b tx-hier-4\">{quala.grade}</p>\r\n        </article>\r\n      </article>\r\n    ))\r\n  ) : (\r\n    <p className=\"fs-16 tx-hier-3 mr-8b\">No qualification added</p>\r\n  );\r\n}\r\n\r\nexport default Qualifications;\r\n","import React from \"react\";\r\n\r\nfunction LoadingScreen() {\r\n  return (\r\n    <section className=\"pd-16 card bg-light disp-flex fl-dir-col fl-jc-ce report-inner mr-8t\">\r\n      <div className=\" al-self-c\">\r\n        <img\r\n          className=\"disp-blk txt-align-center\"\r\n          src=\"./loading.gif\"\r\n          alt=\"\"\r\n          srcset=\"\"\r\n        />\r\n      </div>\r\n      <p className=\"mr-16t txt-align-center\">Loading...</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport MainNav from \"../MainNav/MainNav\";\r\nimport UpdateSkill from \"./UpdateSkills/UpdateSkills\";\r\nimport UpdateQualification from \"./UpdateQualifications/UpdateQualification\";\r\nimport Skills from \"./Skills/Skills\";\r\nimport Qualifications from \"./Qualifications/Qualifications\";\r\nimport LoadingScreen from \"../../UI/LoadingScreen\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction MyInfo() {\r\n  let fname = useStoreState(state => state.profile.fname);\r\n  let lname = useStoreState(state => state.profile.lname);\r\n  let email = useStoreState(state => state.profile.email);\r\n  let address_line1 = useStoreState(state => state.profile.address_line1);\r\n  let address_line2 = useStoreState(state => state.profile.address_line2);\r\n\r\n  let getProfile = useStoreActions(action => action.profile.getProfile);\r\n  let isLoading = useStoreState(state => state.profile.isLoading);\r\n\r\n  let dist = useStoreState(state => state.profile.dist);\r\n  let state = useStoreState(state => state.profile.state);\r\n  let branch = useStoreState(state => state.profile.branch);\r\n  let aboutme = useStoreState(state => state.profile.aboutme);\r\n  let phone = useStoreState(state => state.profile.phone);\r\n  let skills = useStoreState(state => state.profile.skills);\r\n  let qualification = useStoreState(state => state.profile.qualification);\r\n  let pin = useStoreState(state => state.profile.pin);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      getProfile();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      <section id=\"resume\" className=\"flex-basis-70-l\">\r\n        <header id=\"resume-header\" className=\"pd-16 mr-16 flex-basis-50-l\">\r\n          <h2 className=\"fs-24 bold-josef\">My information</h2>\r\n        </header>\r\n        <section className=\"card mr-16 pd-32 disp-flex bg-light\">\r\n          {isLoading ? (\r\n            <LoadingScreen />\r\n          ) : (\r\n            <>\r\n              <section className=\"flex-basis-20-l disp-flex fl-dir-col\">\r\n                <h2 className=\"mr-16b fs-24 bold-josef\">\r\n                  {fname} <br /> {lname}\r\n                </h2>\r\n                <p className=\"fs-18 mr-32b\">{branch}</p>\r\n                <h3 className=\"fs-18 mr-16b tx-hier-3\">\r\n                  Contact <br /> information\r\n                </h3>\r\n                <p className=\"tx-hier-3 fs-16 mr-8b\">{email}</p>\r\n                <p className=\"tx-hier-3 fs-16 mr-32b\">{phone}</p>\r\n                <h3 className=\"fs-18 mr-16b tx-hier-3\">Address</h3>\r\n                <p className=\"tx-hier-3 fs-16 mr-8b\">{address_line1}</p>\r\n                <p className=\"tx-hier-3 fs-16 mr-8b\">{address_line2}</p>\r\n                <p className=\"tx-hier-3 fs-16 mr-8b\">{pin}</p>\r\n                <p className=\"tx-hier-3 fs-16 mr-32b\">\r\n                  {dist}, {state}\r\n                </p>\r\n              </section>\r\n              <section className=\"flex-basis-50-l\">\r\n                <h2 className=\"fs-24 mr-16b  bold-josef\">About me</h2>\r\n                <p className=\"fs-20 lh-16 mr-32b\">{aboutme}</p>\r\n                <h2 className=\"fs-24 mr-16b  bold-josef\">\r\n                  Educational qualification\r\n                </h2>\r\n                <Qualifications qualification={qualification} />\r\n                <UpdateQualification />\r\n                <h2 className=\"fs-24 mr-16b  bold-josef mr-16t\">\r\n                  Skills (technical/soft)\r\n                </h2>\r\n                <Skills skills={skills} />\r\n                <UpdateSkill />\r\n              </section>\r\n            </>\r\n          )}\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyInfo;\r\n","import React, { useState } from \"react\";\r\nimport CustomSelect from \"../../../../../../UI/CustomSelect\";\r\n\r\nfunction ReportUpdateTask({\r\n  tdesc,\r\n  setTDesc,\r\n  // team,\r\n  name,\r\n  // setName,\r\n  dependency,\r\n  setDependency,\r\n  category,\r\n  setCategory\r\n}) {\r\n  let [globalVisibility, setGlobalVisibility] = useState(true);\r\n  return (\r\n    <tr className=\"br-collapse\">\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">\r\n        {/* <CustomSelect\r\n          options={team}\r\n          isStatic={true}\r\n          placeholder={\"Select team member\"}\r\n          value={name}\r\n          selectValue={setName}\r\n          globalVisibility={globalVisibility}\r\n          setGlobalVisibility={setGlobalVisibility}\r\n        /> */}\r\n        {name}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">\r\n        <input\r\n          className=\"wi-100p bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n          type=\"description\"\r\n          placeholder=\"Enter the task description\"\r\n          name=\"task-description\"\r\n          value={tdesc}\r\n          onChange={e => setTDesc(e.target.value)}\r\n        />\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14  bg-gray-trans txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 bg-gray-trans txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">\r\n        <input\r\n          className=\"wi-100p bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n          type=\"number\"\r\n          placeholder=\"xx%\"\r\n          name=\"start-time\"\r\n          min={0}\r\n          max={100}\r\n          value={dependency}\r\n          onChange={e => setDependency(e.target.value)}\r\n        />\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 bg-gray-trans txt-align-center\">\r\n        <CustomSelect\r\n          options={[\r\n            \"Web development\",\r\n            \"Web design\",\r\n            \"Artificial Intelligence\",\r\n            \"Learning\"\r\n          ]}\r\n          isStatic={true}\r\n          placeholder={\"Category\"}\r\n          value={category}\r\n          selectValue={setCategory}\r\n          globalVisibility={globalVisibility}\r\n          setGlobalVisibility={setGlobalVisibility}\r\n        />\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 bg-gray-trans txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 bg-gray-trans txt-align-center\">N/A</td>\r\n      <td className=\"br-sm-blue fs-14 bg-gray-trans txt-align-center\">N/A</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ReportUpdateTask;\r\n","import React, { useState } from \"react\";\r\nimport CustomSelect from \"../../../../../UI/CustomSelect\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ReportTableRow({\r\n  task,\r\n  setVisible,\r\n  setCurrentUserId,\r\n  setUserTasksVisible\r\n}) {\r\n  let [stime, setSTime] = useState(\"06:00\");\r\n  let [etime, setETime] = useState(\"06:00\");\r\n  let [etask, setETask] = useState(\"\");\r\n  let [stask, setSTask] = useState(\"\");\r\n  let [progress, setProgress] = useState(\"\");\r\n  let [newskill, setNewskill] = useState(\"\");\r\n  let [kgain, setKgain] = useState(\"\");\r\n  let [comment, setComment] = useState(\"\");\r\n  let { user_id } = useStoreState(state => state.profile);\r\n  let updateTask = useStoreActions(action => action.admin.updateTask);\r\n  let setUserTasksLoading = useStoreActions(\r\n    action => action.admin.setUserTasksLoading\r\n  );\r\n  let deleteTask = useStoreActions(action => action.admin.deleteTask);\r\n  let updateComment = useStoreActions(action => action.admin.updateComment);\r\n\r\n  function isAuthUser() {\r\n    return user_id === task.user_id;\r\n  }\r\n\r\n  return (\r\n    <tr className=\"br-collapse\">\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        <a\r\n          href=\"\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setCurrentUserId(user_id);\r\n            setUserTasksVisible(true);\r\n            setUserTasksLoading(true);\r\n          }}\r\n        >\r\n          {task.name ? task.name : task.fname + \" \" + task.lname}\r\n        </a>\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {task.task_description}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.stime ? (\r\n          <input\r\n            className=\"wi-100p bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n            type=\"time\"\r\n            placeholder=\"hh:mm\"\r\n            name=\"start-time\"\r\n            value={stime}\r\n            onChange={e => setSTime(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p>{task.stime || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.status_sod ? (\r\n          <CustomSelect\r\n            options={[\"Completed\", \"Started\", \"Ongoing\"]}\r\n            isStatic={true}\r\n            placeholder={\"Status\"}\r\n            value={stask}\r\n            selectValue={setSTask}\r\n          />\r\n        ) : (\r\n          <p>{task.status_sod || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.etime ? (\r\n          <input\r\n            className=\"wi-100p bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n            type=\"time\"\r\n            name=\"end-time\"\r\n            value={etime}\r\n            onChange={e => setETime(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p>{task.etime || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.status_eod ? (\r\n          <CustomSelect\r\n            options={[\"Completed\", \"Started\", \"Ongoing\"]}\r\n            isStatic={true}\r\n            placeholder={\"Status\"}\r\n            value={etask}\r\n            selectValue={setETask}\r\n          />\r\n        ) : (\r\n          <p>{task.status_eod || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {task.dependency || \"Not available\"}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {user_id === task.user_id && !task.progress ? (\r\n          <input\r\n            className=\"wi-100p bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n            type=\"number\"\r\n            placeholder=\"xx%\"\r\n            name=\"start-time\"\r\n            min={0}\r\n            max={100}\r\n            value={progress}\r\n            onChange={e => setProgress(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p>{task.progress || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {task.category}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.new_skills_acquired ? (\r\n          <textarea\r\n            className=\"bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n            name=\"knowledge-gained\"\r\n            value={newskill}\r\n            onChange={e => {\r\n              setNewskill(e.target.value);\r\n            }}\r\n            id=\"\"\r\n            placeholder=\"Enter the new skills aquired\"\r\n          ></textarea>\r\n        ) : (\r\n          <p>{task.new_skills_acquired || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && !task.knowledge_gained ? (\r\n          <textarea\r\n            value={kgain}\r\n            onChange={e => {\r\n              setKgain(e.target.value);\r\n            }}\r\n            className=\"bg-gray-trans br-none pd-4y pd-8x disp-ib\"\r\n            name=\"knowledge-gainer\"\r\n            id=\"\"\r\n            placeholder=\"Enter the knowledge gained\"\r\n          ></textarea>\r\n        ) : (\r\n          <p>{task.knowledge_gained || \"Not available\"}</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() ? (\r\n          <button\r\n            className=\"btn\"\r\n            onClick={e => {\r\n              if (isAuthUser()) {\r\n                updateTask({\r\n                  reportId: task.reportid,\r\n                  userId: task.user_id,\r\n                  startStatus: stask || task.status_sod,\r\n                  startTime: stime || task.stime,\r\n                  endStatus: etask || task.status_eod,\r\n                  endTime: etime || task.etime,\r\n                  progress: progress || task.progress,\r\n                  knowledegeGained: kgain || task.knowledge_gained,\r\n                  newSkills: newskill || task.new_skills_acquired\r\n                });\r\n                setVisible();\r\n              }\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        ) : (\r\n          <p>Not allowed</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {isAuthUser() && setVisible ? (\r\n          <button\r\n            className=\"btn\"\r\n            onClick={e => {\r\n              if (isAuthUser()) {\r\n                deleteTask({\r\n                  reportid: task.reportid\r\n                });\r\n                setVisible();\r\n              }\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        ) : (\r\n          <p>Not allowed</p>\r\n        )}\r\n      </td>\r\n      <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16 txt-align-center\">\r\n        {task.assignedby == user_id && !task.comment && setVisible ? (\r\n          <>\r\n            <textarea\r\n              value={comment}\r\n              onChange={e => {\r\n                setComment(e.target.value);\r\n              }}\r\n              className=\"bg-gray-trans br-none pd-4y pd-8x disp-ib mr-8b\"\r\n              name=\"comment\"\r\n              id=\"\"\r\n              placeholder=\"Enter the knowledge gained\"\r\n            ></textarea>\r\n            <button\r\n              className=\"btn\"\r\n              onClick={e => {\r\n                setVisible(false);\r\n                console.log(task);\r\n                updateComment({\r\n                  reportid: task.reportid,\r\n                  comment,\r\n                  user_id: task.user_id\r\n                });\r\n              }}\r\n            >\r\n              Submit comment\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <p>{task.comment || \"No comment added yet\"}</p>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ReportTableRow;\r\n","import React from \"react\";\r\n\r\nfunction ReportTableHeader() {\r\n  return (\r\n    <tr className=\"br-collapse\">\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Name</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Task Description</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Starting time</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x \">Starting status</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Ending time</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x \">Ending status</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Dependancy</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">\r\n        Task progress/Completion\r\n      </th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Category</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">New skills gained</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Knowledge aquired</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Update change</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Delete task</th>\r\n      <th className=\"br-sm-blue-dark fs-14 pd-16x pd-4y\">Comment</th>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ReportTableHeader;\r\n","import React from \"react\";\r\n\r\nfunction LoadingScreenSmall() {\r\n  return (\r\n    <div className=\"wi-100p txt-align-center\">\r\n      <img className=\"wi-30\" src=\"loading.gif\" />\r\n      <p>loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreenSmall;\r\n","import React, { useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport ReportTableRow from \"../ReportTableRow/ReportTableRow\";\r\nimport LoadingScreenSmall from \"../../../../../UI/LoadingScreenSmall\";\r\n\r\nfunction ReportTableAllTasks({\r\n  userId,\r\n  activityId,\r\n  isUserTasksVisible,\r\n  setUserTasksVisible\r\n}) {\r\n  let fetchAllUserTasks = useStoreActions(\r\n    action => action.admin.fetchAllUserTasks\r\n  );\r\n  let userTasks = useStoreState(state => state.admin.userTasks);\r\n  let isUserTasksLoading = useStoreState(\r\n    state => state.admin.isUserTasksLoading\r\n  );\r\n  let setUserTasksLoading = useStoreActions(\r\n    action => action.admin.setUserTasksLoading\r\n  );\r\n  useEffect(() => {\r\n    if (isUserTasksLoading) fetchAllUserTasks({ userId, activityId });\r\n  }, [isUserTasksLoading]);\r\n  return (\r\n    <>\r\n      <section class=\"user-modal pd-32\">\r\n        <div class=\"pd-32 test-container bg-light\">\r\n          <h3 className=\"mr-8b fs-14\">All the reports of this activity</h3>\r\n          <i\r\n            class=\"fas fa-times-circle close-btn cu-po\"\r\n            onClick={e => {\r\n              setUserTasksVisible(false);\r\n            }}\r\n          ></i>\r\n          <table id=\"task-table\" className=\"br-collapse anim-down bg-light\">\r\n            <tbody className=\"card\">\r\n              {userTasks && userTasks.length && !isUserTasksLoading ? (\r\n                userTasks.map(task => <ReportTableRow task={task} />)\r\n              ) : isUserTasksLoading ? (\r\n                <>\r\n                  <td\r\n                    className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16\"\r\n                    colspan={12}\r\n                  >\r\n                    <LoadingScreenSmall />\r\n                  </td>\r\n                </>\r\n              ) : (\r\n                <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16\" colspan={12}>\r\n                  <p>Tasks are not yet assigned</p>\r\n                </td>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportTableAllTasks;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReportUpdateTask from \"./ReportTableRow/ReportUpdateTask/ReportUpdateTask\";\r\nimport ReportTableRow from \"./ReportTableRow/ReportTableRow\";\r\nimport ReportUpdateMilestone from \"./ReportTableRow/ReportUpdateMilestone/ReportUpdateMilestone\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ReportTableHeader from \"./ReportTableRow/ReportTableHeader/ReportTableHeader\";\r\nimport LoadingScreenSmall from \"../../../../UI/LoadingScreenSmall\";\r\nimport ReportTableAllTasks from \"./ReportTableAllTasks/ReportTableAllTasks\";\r\n\r\nfunction ReportTable({\r\n  tasks,\r\n  suid,\r\n  team = [],\r\n  activityid,\r\n  milestone,\r\n  setVisible,\r\n  isLoading\r\n}) {\r\n  let setActivityTasks = useStoreActions(\r\n    action => action.admin.fetchActivityTask\r\n  );\r\n  let [isUserTasksVisible, setUserTasksVisible] = useState(false);\r\n  let [isAssignTaskVisible, setAssignTaskVisible] = useState(false);\r\n  let [newTasks, setNTask] = useState([]);\r\n  let [custteam, setTeam] = useState(\r\n    team.filter(\r\n      member => !(tasks && tasks.some(task => task.user_id === member.user_id))\r\n    )\r\n  );\r\n  let setTasks = useStoreActions(action => action.admin.setTasks);\r\n  let [name, setName] = useState(\"\");\r\n  let [dependency, setDependency] = useState(\"\");\r\n  let [category, setCategory] = useState(\"\");\r\n  let [tdesc, setTDesc] = useState(\"\");\r\n  let { user_id } = useStoreState(state => state.profile);\r\n  let { fname, lname } = useStoreState(state => state.profile);\r\n  let [currentUserId, setCurrentUserId] = useState(user_id);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) setActivityTasks(activityid);\r\n    console.log(isLoading);\r\n  }, [isLoading]);\r\n\r\n  function setCorrectTask() {\r\n    setAssignTaskVisible(false);\r\n    // setTeam([...custteam, user_id]);\r\n    setNTask([\r\n      ...newTasks,\r\n      {\r\n        user_id: user_id,\r\n        name: fname + \" \" + lname,\r\n        task_description: tdesc,\r\n        dependency,\r\n        category\r\n      }\r\n    ]);\r\n  }\r\n\r\n  function isSuper() {\r\n    return suid === user_id;\r\n  }\r\n\r\n  function isAnyTasks() {\r\n    console.log(tasks);\r\n    return (tasks && tasks.length) || (newTasks && newTasks.length);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table id=\"task-table\" className=\"br-collapse anim-down\">\r\n        <thead>\r\n          {/* {isSuper() && milestone === \"No milestone set\" ? (\r\n            <ReportUpdateMilestone\r\n              milestone={milestone}\r\n              setMilestone={setMilestone}\r\n            />\r\n          ) : null} */}\r\n          {isAnyTasks() ? <ReportTableHeader /> : null}\r\n        </thead>\r\n        <tbody className=\"card\">\r\n          {isAnyTasks() && !isLoading ? (\r\n            [...tasks, ...newTasks].map(task => (\r\n              <ReportTableRow\r\n                setUserTasksVisible={setUserTasksVisible}\r\n                setCurrentUserId={setCurrentUserId}\r\n                setVisible={setVisible}\r\n                task={task}\r\n              />\r\n            ))\r\n          ) : (\r\n            <tr className=\"br-collapse\">\r\n              <td className=\"br-sm-blue fs-14 pd-8x pd-4y lh-16\" colspan={12}>\r\n                {isLoading ? (\r\n                  <>\r\n                    <LoadingScreenSmall />\r\n                  </>\r\n                ) : (\r\n                  <p>Tasks are not yet assigned</p>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          )}\r\n          {!isAnyTasks() && isAssignTaskVisible ? <ReportTableHeader /> : null}\r\n          {isAssignTaskVisible ? (\r\n            <ReportUpdateTask\r\n              // team={custteam.map(\r\n              //   member => member.fname + \" \" + member.lname + member.user_id\r\n              // )}\r\n              tdesc={tdesc}\r\n              setTDesc={setTDesc}\r\n              name={fname + \" \" + lname}\r\n              setName={setName}\r\n              dependency={dependency}\r\n              setDependency={setDependency}\r\n              category={category}\r\n              setCategory={setCategory}\r\n            />\r\n          ) : null}\r\n        </tbody>\r\n      </table>\r\n      {isAssignTaskVisible ? (\r\n        <button\r\n          onClick={e => {\r\n            setAssignTaskVisible(!isAssignTaskVisible);\r\n          }}\r\n          className=\"btn mr-16\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      ) : null}\r\n      {newTasks && newTasks.length ? (\r\n        <button\r\n          className=\"blk btn  mr-16t mr-12r\"\r\n          onClick={e => {\r\n            setVisible(false);\r\n            setTasks({ user_id: newTasks, milestone, activityid, suid });\r\n          }}\r\n        >\r\n          Submit report\r\n        </button>\r\n      ) : null}\r\n      {!isAssignTaskVisible &&\r\n      !isLoading &&\r\n      !team.every(member =>\r\n        [\r\n          ...(newTasks && newTasks.length ? newTasks : []),\r\n          ...(tasks && tasks.length ? tasks : [])\r\n        ].some(\r\n          task => task.user_id === member.user_id || task.user_id === user_id\r\n        )\r\n      ) ? (\r\n        <button\r\n          onClick={e => {\r\n            setAssignTaskVisible(!isAssignTaskVisible);\r\n          }}\r\n          className=\"blk btn mr-16t mr-12r\"\r\n        >\r\n          Assign new task\r\n        </button>\r\n      ) : null}\r\n      {isAssignTaskVisible ? (\r\n        <button\r\n          className=\"blk btn  mr-16t mr-12r\"\r\n          onClick={e => {\r\n            setCorrectTask();\r\n          }}\r\n        >\r\n          Submit Changes\r\n        </button>\r\n      ) : null}\r\n      {isUserTasksVisible ? (\r\n        <ReportTableAllTasks\r\n          setUserTasksVisible={setUserTasksVisible}\r\n          activityId={activityid}\r\n          userId={currentUserId}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReportTable from \"./ReportTable/ReportTable\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction Report({ report }) {\r\n  let [isVisible, setVisible] = useState(false);\r\n  let isLoading = useStoreState(state => state.admin.isTaskLoading);\r\n  let setTaskLoading = useStoreActions(action => action.admin.setTaskLoading);\r\n  let [tasks, setTasks] = useState(report.tasks || [{}]);\r\n  let team = report.team;\r\n  let [\r\n    { milestone: taskMilestone = \"No milestone set\" } = {\r\n      milestone: \"No milestone set\"\r\n    }\r\n  ] = tasks;\r\n  let [milestone, setMilestone] = useState(taskMilestone);\r\n\r\n  useEffect(() => {\r\n    setTasks(report.tasks || [{}]);\r\n    let [\r\n      { milestone: taskMilestone = \"No milestone set\" } = {\r\n        milestone: \"No milestone set\"\r\n      }\r\n    ] = report.tasks || [{}];\r\n    setMilestone(taskMilestone);\r\n  }, [report.tasks]);\r\n\r\n  return (\r\n    <section className=\"pd-16 card bg-light report-inner mr-8t mr-16b  anim-trans\">\r\n      <h3 className=\"mr-8b\">{report.activity_title}</h3>\r\n      <p className=\"mr-8b tx-hier-2\">{report.work}</p>\r\n      <p className=\"fs-14 tx-hier-4\">{report.activity_type}</p>\r\n\r\n      {isVisible ? (\r\n        <section className=\"pd-16 task-table-holder anim-trans\">\r\n          <h3 className=\"mr-8b fs-14\">Todays report</h3>\r\n          {/* <p className=\"mr-8b\">{milestone}</p> */}\r\n          <ReportTable\r\n            tasks={tasks}\r\n            setTask={setTasks}\r\n            suid={report.suid}\r\n            team={team}\r\n            activityid={report.activityid}\r\n            milestone={milestone}\r\n            setMilestone={setMilestone}\r\n            setVisible={setVisible}\r\n            isLoading={isLoading}\r\n          />\r\n        </section>\r\n      ) : null}\r\n      <section id=\"imp-sec\" className=\"disp-flex fl-jc-fe\">\r\n        {/* <button className=\"btn mr-8t mr-12r\">Project Completed</button> */}\r\n        <button\r\n          className=\"btn mr-8t\"\r\n          onClick={e => {\r\n            if (!isVisible) {\r\n              setTaskLoading(true);\r\n              setVisible(true);\r\n            } else {\r\n              setVisible(false);\r\n            }\r\n          }}\r\n        >\r\n          View {isVisible ? \"Less\" : \"More\"}\r\n        </button>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n","import React from \"react\";\r\nimport Report from \"./Report/Report\";\r\n\r\nfunction Reports({ activities }) {\r\n  return activities.map(report => <Report report={report} />);\r\n}\r\n\r\nexport default Reports;\r\n","import React, { useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nfunction ReportQuery({ setVisible }) {\r\n  let users = useStoreState(state => state.auth.users);\r\n  let getAllUsers = useStoreActions(action => action.auth.getAllUsers);\r\n  useEffect(() => {\r\n    if (!users) getAllUsers();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <div class=\"disp-flex mr-16x\">\r\n        <section class=\"flex-basis-30-l pd-16x  mr-8b\">\r\n          <label class=\" form-labl\" for=\"fname\">\r\n            Search by project title\r\n          </label>\r\n          <input\r\n            class=\"form-inp wi-100p\"\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            id=\"fname\"\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n        </section>\r\n        <section class=\"flex-basis-30-l pd-16x  mr-8b\">\r\n          <label class=\" form-labl\" for=\"fname\">\r\n            Search by category\r\n          </label>\r\n          <input\r\n            class=\"form-inp wi-100p\"\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            id=\"fname\"\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n        </section>\r\n        <section class=\"flex-basis-30-l pd-16x  mr-8b\">\r\n          <label class=\" form-labl\" for=\"fname\">\r\n            Search by completion\r\n          </label>\r\n          <input\r\n            class=\"form-inp wi-100p\"\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            id=\"fname\"\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n        </section>\r\n        <section class=\"flex-basis-30-l pd-16x  mr-8b\">\r\n          <label class=\" form-labl\" for=\"fname\">\r\n            Sort by\r\n          </label>\r\n          <input\r\n            class=\"form-inp wi-100p\"\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            id=\"fname\"\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n        </section>\r\n      </div> */}\r\n      <section className=\"mr-16x pd-16x disp-flex fl-jc-fe\">\r\n        {users ? (\r\n          <button\r\n            className=\"blk btn mr-4r\"\r\n            onClick={e => {\r\n              setVisible(true);\r\n            }}\r\n          >\r\n            Make a new team\r\n          </button>\r\n        ) : (\r\n          <p>Loading users</p>\r\n        )}\r\n        {/* <button class=\"blk btn mr-4r\">Submit search</button> */}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReportQuery;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport CustomSelect from \"../../UI/CustomSelect\";\r\n\r\nfunction AdminRecruitTeam({ setVisible }) {\r\n  let users = useStoreState(state => state.auth.users);\r\n\r\n  let [field, setField] = useState(\"web Development\");\r\n  let [members, setMembers] = useState([]);\r\n  let [superVisor, setSupervisor] = useState(\"\");\r\n  let [activityType, setActivityType] = useState(\"\");\r\n  let [activityTitle, setActivityTitle] = useState(\"\");\r\n  let submitActivityTeam = useStoreActions(\r\n    action => action.admin.submitActivityTeam\r\n  );\r\n  function setSelectMembers(payload) {\r\n    setMembers([...members, payload]);\r\n  }\r\n  return (\r\n    <div className=\"pos-fixed-top bg-dark-trans wi-100p hi-100p z-3\">\r\n      <form\r\n        action=\"POST\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          submitActivityTeam({\r\n            work: field,\r\n            user_id: members.map(str => parseInt(str.match(/\\d+/)[0])),\r\n            super_id: parseInt(superVisor.match(/\\d+/)[0]),\r\n            activity_type: activityType,\r\n            title: activityTitle\r\n          });\r\n          setVisible(false);\r\n        }}\r\n      >\r\n        <section className=\"pd-16 mr-16\">\r\n          <section className=\"pd-16 card card-color-yellow tx-trans-lv1 report-inner mr-8t\">\r\n            <h3 className=\"mr-16b fs-24\">Start a new activity</h3>\r\n            <div>\r\n              <label className=\"mr-16t form-labl\" for=\"field\">\r\n                Field of work\r\n              </label>\r\n              <CustomSelect\r\n                options={[\r\n                  \"IOT\",\r\n                  \"Artificial Intelligence\",\r\n                  \"android development\",\r\n                  \"web development\"\r\n                ]}\r\n                placeholder={\"Enter the field of work\"}\r\n                selectValue={setField}\r\n                value={field}\r\n                isStatic={true}\r\n                reqired={true}\r\n              />\r\n            </div>\r\n            <section className=\"mr-12r\">\r\n              <label className=\"mr-16t form-labl\" for=\"title\">\r\n                Activity title\r\n              </label>\r\n              <input\r\n                className=\"mr-8b form-inp wi-100p\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"title\"\r\n                placeholder=\"Enter the activity's title\"\r\n                value={activityTitle}\r\n                onChange={e => {\r\n                  setActivityTitle(e.target.value);\r\n                }}\r\n                required={true}\r\n              />\r\n            </section>\r\n            <section className=\"mr-12r\">\r\n              <label className=\"mr-16t form-labl\" for=\"work\">\r\n                Activity type\r\n              </label>\r\n              <CustomSelect\r\n                options={[\"Project\", \"Workshop\", \"Training\"]}\r\n                placeholder={\"Enter activity type \"}\r\n                selectValue={setActivityType}\r\n                value={activityType}\r\n                isStatic={false}\r\n                reqired={true}\r\n              />\r\n            </section>\r\n            <section className=\"mr-12r\">\r\n              <label className=\"mr-16t form-labl\" for=\"members\">\r\n                Add team members\r\n              </label>\r\n              <CustomSelect\r\n                options={users\r\n                  .filter(\r\n                    user =>\r\n                      !members.some(member => member.includes(user.user_id))\r\n                  )\r\n                  .map(\r\n                    ({ fname, lname, user_id }) =>\r\n                      fname + \" \" + lname + `${user_id}`\r\n                  )}\r\n                placeholder={\"Add members \"}\r\n                selectValue={setSelectMembers}\r\n                value={\"\"}\r\n                isStatic={false}\r\n                required={false}\r\n              />\r\n            </section>\r\n            {members.map(member => (\r\n              <div\r\n                key={member}\r\n                onClick={e => {\r\n                  setMembers(\r\n                    members.filter(existMember => {\r\n                      if (member === superVisor) setSupervisor(\"\");\r\n                      return existMember !== member;\r\n                    })\r\n                  );\r\n                }}\r\n                className=\"card pd-8x cu-po pd-4y disp-ib bg-light mr-16t  mr-4r\"\r\n              >\r\n                {member.replace(/\\d+/, \"\") + \" X\"}\r\n              </div>\r\n            ))}\r\n            <section className=\"mr-12r\">\r\n              <label className=\"mr-16t form-labl\" for=\"supervisor\">\r\n                Appoint supervisor\r\n              </label>\r\n              <CustomSelect\r\n                options={members}\r\n                placeholder={\"Select supervisor \"}\r\n                selectValue={setSupervisor}\r\n                value={superVisor}\r\n                isStatic={false}\r\n                required={false}\r\n              />\r\n            </section>\r\n            <section id=\"imp-sec\" className=\"disp-flex fl-jc-fe\">\r\n              <button\r\n                className=\"btn mr-8t mr-12r\"\r\n                onClick={e => setVisible(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button className=\"btn mr-8t\">Assign activity</button>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminRecruitTeam;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Reports from \"../Reports/Reports\";\r\nimport MainNav from \"../MainNav/MainNav\";\r\nimport ReportQuery from \"../Reports/Report/ReportQuery/ReportQuery\";\r\nimport LoadingScreen from \"../../UI/LoadingScreen\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport AdminRecruitTeam from \"../AdminRecruitTeam/AdminRecrutTeam\";\r\n\r\nfunction Activities() {\r\n  let activities = useStoreState(state => state.admin.activities);\r\n  let [isVisible, setVisible] = useState(false);\r\n  let { type: authType } = useStoreState(state => state.auth.profile);\r\n  let isLoading = useStoreState(state => state.admin.isLoading);\r\n  let fetchActivities = useStoreActions(action => action.admin.fetchActivities);\r\n  useEffect(() => {\r\n    fetchActivities(authType);\r\n  }, [fetchActivities, authType]);\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      {isVisible ? (\r\n        <AdminRecruitTeam setVisible={setVisible} isVisible={isVisible} />\r\n      ) : null}\r\n      <section id=\"report-details\" className=\"flex-basis-70-l\">\r\n        <header id=\"reports-header\" className=\"pd-16 mr-16x flex-basis-50-l\">\r\n          <h2 className=\"fs-24\">Acitve Activities</h2>\r\n        </header>\r\n        {authType === \"A\" ? <ReportQuery setVisible={setVisible} /> : null}\r\n        <section className=\" pd-32 mr-16\">\r\n          {activities && activities.length ? (\r\n            <Reports activities={activities} />\r\n          ) : (\r\n            <section className=\"pd-16 card bg-light report-inner mr-8t\">\r\n              <h3 className=\"mr-8b\">No active activities</h3>\r\n            </section>\r\n          )}\r\n          {isLoading ? <LoadingScreen /> : null}\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Activities;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nimport Auth from \"../Auth/Auth\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport MyInfo from \"./MyInfo/MyInfo\";\r\nimport Activities from \"./Activities/Activities\";\r\n\r\nfunction Main() {\r\n  let setAuth = useStoreActions(action => action.auth.setAuth);\r\n  let setProfile = useStoreActions(action => action.profile.setProfile);\r\n\r\n  function clearProfile() {\r\n    setProfile({\r\n      type: \"U\",\r\n      isLoading: true,\r\n      fname: \"\",\r\n      lname: \"\",\r\n      type: \"U\",\r\n      dob: \"\",\r\n      sex: \"\",\r\n      phone: \"\",\r\n      sem: \"\",\r\n      domainId: \"\",\r\n      address_line1: \"\",\r\n      address_line2: \"\",\r\n      city: \"\",\r\n      dist: \"\",\r\n      state: \"\",\r\n      pin: \"\",\r\n      branch: \"\",\r\n      aboutMe: \"\",\r\n      email: \"\",\r\n      skills: [],\r\n      isDone: false,\r\n      attendance: \"\",\r\n      aboutme: \"\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section id=\"dashboard\" class=\"disp-flex\">\r\n      <BrowserRouter>\r\n        <Route exact path=\"/\" component={Auth} />\r\n        <Route\r\n          path=\"/logout\"\r\n          render={() => {\r\n            localStorage.clear();\r\n            setAuth(false);\r\n            clearProfile();\r\n            return <Redirect to=\"/\" />;\r\n          }}\r\n        />\r\n        <ProtectedRoute path=\"/settings\" component={Settings} />\r\n        <ProtectedRoute path=\"/myinfo\" component={MyInfo} />\r\n        <ProtectedRoute path=\"/activities\" component={Activities} />\r\n      </BrowserRouter>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) {\r\n  let isAuth = useStoreState(state => state.auth.isAuth);\r\n  if (isAuth) {\r\n    return <Route {...rest} component={Component} />;\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  isAuth: false,\r\n  setType: action((state, payload) => {\r\n    state[\"type\"] = payload;\r\n  }),\r\n  setAuth: action((state, payload) => {\r\n    state[\"isAuth\"] = payload;\r\n  }),\r\n  isSuper: false,\r\n  setSuper: action((state, payload) => {\r\n    state[\"isSuper\"] = payload;\r\n  }),\r\n  setUsers: action((state, payload) => {\r\n    state[\"users\"] = payload;\r\n  }),\r\n  profile: {},\r\n  setProfile: action((state, payload) => {\r\n    state[\"profile\"] = payload;\r\n  }),\r\n  errors: [],\r\n  setErrors: action((state, payload) => {\r\n    state[\"errors\"] = payload;\r\n  }),\r\n  loginSubmit: thunk(async (action, payload) => {\r\n    try {\r\n      let profile = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/login\",\r\n        payload\r\n      );\r\n      action.setProfile(profile.data);\r\n      action.setAuth(true);\r\n      localStorage.setItem(\"token\", profile.data.token);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      action.setErrors(err.response.data);\r\n    }\r\n  }),\r\n  registerSubmit: thunk(async (action, payload) => {\r\n    try {\r\n      let profile = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/signup\",\r\n        payload\r\n      );\r\n      action.setProfile(profile.data);\r\n      action.setAuth(true);\r\n      localStorage.setItem(\"token\", profile.data.token);\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      action.setErrors(err.response.data);\r\n    }\r\n  }),\r\n  getAllUsers: thunk(async (action, payload) => {\r\n    axios\r\n      .get(\"https://atharv-ed-portal.herokuapp.com/admin/all\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      })\r\n      .then(users => {\r\n        action.setUsers(users.data.allUsers);\r\n        delete users.data.allUsers;\r\n        action.setProfile({\r\n          type: \"A\"\r\n        });\r\n        action.setAuth(true);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.data.type === \"email\" && typeof payload === \"function\")\r\n          payload(action.setAuth);\r\n        else {\r\n          action.setType(\"U\");\r\n          localStorage.removeItem(\"token\");\r\n        }\r\n      });\r\n  })\r\n};\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setLoading: action((state, payload) => {\r\n    state[\"isLoading\"] = false;\r\n  }),\r\n  isLoading: true,\r\n  fname: \"\",\r\n  lname: \"\",\r\n  type: \"U\",\r\n  dob: \"\",\r\n  sex: \"\",\r\n  phone: \"\",\r\n  sem: \"\",\r\n  domainId: \"\",\r\n  address_line1: \"\",\r\n  address_line2: \"\",\r\n  city: \"\",\r\n  dist: \"\",\r\n  state: \"\",\r\n  pin: \"\",\r\n  branch: \"\",\r\n  aboutMe: \"\",\r\n  email: \"\",\r\n  skills: [],\r\n  isDone: false,\r\n  setDone: action((state, payload) => {\r\n    state[\"isDone\"] = payload;\r\n  }),\r\n  setProfile: action((state, payload) => {\r\n    for (let i in payload) state[i] = payload[i];\r\n  }),\r\n  attendance: \"\",\r\n  aboutme: \"\",\r\n  getProfile: thunk(async (action, payload) => {\r\n    try {\r\n      let profile = await axios.get(\r\n        \"https://atharv-ed-portal.herokuapp.com/profile\",\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      if (typeof payload === \"function\") payload(true);\r\n      action.setProfile(profile.data);\r\n      action.setLoading(true);\r\n    } catch (err) {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }),\r\n  updateProfile: thunk(async (action, payload) => {\r\n    try {\r\n      let profile = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/profile\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      profile = profile.data;\r\n      action.setProfile(profile);\r\n      action.setDone(true);\r\n      action.setLoading(true);\r\n      setTimeout(() => action.setDone(false), 3000);\r\n    } catch (err) {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }),\r\n  updateSkills: thunk(async (action, payload) => {\r\n    try {\r\n      let skill = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/profile/skills\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      action.setProfile(skill.data);\r\n    } catch (err) {}\r\n  }),\r\n  updateQualification: thunk(async (action, payload) => {\r\n    try {\r\n      let qualification = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/profile/qualification\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n\r\n      action.setProfile(qualification.data);\r\n    } catch (err) {}\r\n  })\r\n};\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  // milestone: \"Admin section of LMS ports\",\r\n  // superId: 2,\r\n  // project: {\r\n  //   title: \"Learning management system\"\r\n  // },\r\n  // daysAttended: 32,\r\n  // totalDays: 40,\r\n  // task: {\r\n  //   progress: 50,\r\n  //   title: \"Work on frontend implementation of admin section\",\r\n  //   startTime: new Date(),\r\n  //   startStatus: \"Started\",\r\n  //   endStatus: \"Completed\",\r\n  //   endTime: new Date(),\r\n  //   dependancy: 25\r\n  // },\r\n  // tasksCopleted: 20,\r\n  // reports: [{\r\n  //   type: \"project\",\r\n  //   work: \"web development\",\r\n  //   title: \"AtharvEd LMS\",\r\n  // tasks: [{\r\n  //   userId: 1,\r\n  //   category: \"Web development\",\r\n  //   f_name: \"Aravind\",\r\n  //   l_name: \"Rao\",\r\n  //   progress: 50,\r\n  //   title: \"Work on frontend implementation of admin section\",\r\n  //   startTime: new Date(),\r\n  //   startStatus: \"Started\",\r\n  //   endStatus: \"Completed\",\r\n  //   endTime: new Date(),\r\n  //   dependancy: 25\r\n  // }, {\r\n  //   userId: 2,\r\n  //   category: \"Web development\",\r\n  //   f_name: \"Aravind\",\r\n  //   l_name: \"Rao\",\r\n  //   progress: 50,\r\n  //   title: \"Work on frontend implementation of admin section\",\r\n  //   startTime: new Date(),\r\n  //   startStatus: \"Started\",\r\n  //   endStatus: \"Completed\",\r\n  //   endTime: new Date(),\r\n  //   dependancy: 25\r\n  // }, {\r\n  //   userId: 3,\r\n  //   category: \"Web development\",\r\n  //   f_name: \"Aravind\",\r\n  //   l_name: \"Rao\",\r\n  //   progress: 50,\r\n  //   title: \"Work on frontend implementation of admin section\",\r\n  //   startTime: new Date(),\r\n  //   startStatus: \"Started\",\r\n  //   endStatus: \"Completed\",\r\n  //   endTime: new Date(),\r\n  //   dependancy: 25\r\n  // }]\r\n  // }]\r\n  isTasksLoading: true,\r\n  setTasksLoading: action((state, payload) => {\r\n    state[\"isTasksLoading\"] = payload;\r\n  }),\r\n  tasks: [],\r\n  setTasks: action((state, payload) => {\r\n    state[\"tasks\"] = payload;\r\n  }),\r\n  fetchTasks: thunk(async (action, payload) => {\r\n    try {\r\n      let tasks = await axios.get(\r\n        `https://atharv-ed-portal.herokuapp.com/tasks/${payload}`\r\n      );\r\n\r\n      action.setTasks(tasks.data);\r\n      action.isTasksLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      action.isTasksLoading(false);\r\n    }\r\n  })\r\n};\r\n","import auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport report from './report'\r\nimport admin from './admin'\r\n\r\nexport default {\r\n  admin,\r\n  auth,\r\n  profile,\r\n  report\r\n};","import { thunk, action } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\nexport default {\r\n  activities: [],\r\n  isTaskLoading: true,\r\n  domains: [\r\n    \"IOT\",\r\n    \"Artificial Intelligence\",\r\n    \"android development\",\r\n    \"web development\"\r\n  ],\r\n  userTasks: [],\r\n  setUserTasks: action((state, payload) => {\r\n    state[\"userTasks\"] = payload;\r\n  }),\r\n  isUserTasksLoading: true,\r\n  setUserTasksLoading: action((state, payload) => {\r\n    state[\"isUserTasksLoading\"] = payload;\r\n  }),\r\n  setDomains: action((state, payload) => {\r\n    state[\"domains\"] = payload.map(domain => domain.title);\r\n  }),\r\n  setTaskLoading: action((state, payload) => {\r\n    state[\"isTaskLoading\"] = payload;\r\n  }),\r\n  setActivityTask: action((state, payload) => {\r\n    state[\"activities\"] = state[\"activities\"].map(activity => {\r\n      console.log(payload.activityid, activity.activityid);\r\n      if (activity.activityid === payload.activityid) {\r\n        activity.tasks = payload.tasks;\r\n        console.log(activity.tasks);\r\n      }\r\n      return activity;\r\n    });\r\n    state[\"isTaskLoading\"] = false;\r\n  }),\r\n  isLoading: true,\r\n  setLoading: action((state, payload) => {\r\n    state[\"isLoading\"] = payload;\r\n  }),\r\n  setActivities: action((state, payload) => {\r\n    state[\"activities\"] = [...payload];\r\n  }),\r\n  isAdmin: false,\r\n  fetchAllUserTasks: thunk(async (action, payload) => {\r\n    console.log(\"Here bro\");\r\n    try {\r\n      action.setUserTasksLoading(true);\r\n      let { activityId, userId } = payload;\r\n      let activities = await axios.get(\r\n        `https://atharv-ed-portal.herokuapp.com/reports/activity/${activityId}/user/${userId}`,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n\r\n      action.setUserTasks(activities.data);\r\n      action.setUserTasksLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      action.setLoading(false);\r\n    }\r\n  }),\r\n  submitActivityTeam: thunk(async (action, payload) => {\r\n    try {\r\n      axios\r\n        .post(\r\n          \"https://atharv-ed-portal.herokuapp.com/admin/activity\",\r\n          payload,\r\n          {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n          }\r\n        )\r\n        .then(data => {\r\n          action.fetchActivities(\"A\");\r\n        });\r\n    } catch (err) {}\r\n  }),\r\n  fetchActivities: thunk(async (action, payload) => {\r\n    try {\r\n      action.setLoading(true);\r\n      if (payload === \"A\") {\r\n        let activities = await axios.get(\r\n          \"https://atharv-ed-portal.herokuapp.com/admin/activity/incomplete\",\r\n          {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n          }\r\n        );\r\n\r\n        action.setLoading(false);\r\n        action.setActivities(activities.data.incompleteActivity);\r\n      } else {\r\n        let activities = await axios.get(\r\n          \"https://atharv-ed-portal.herokuapp.com/reports/activity/\",\r\n          {\r\n            headers: {\r\n              \"x-auth-token\": localStorage.getItem(\"token\")\r\n            }\r\n          }\r\n        );\r\n\r\n        action.setLoading(false);\r\n        action.setActivities(activities.data);\r\n      }\r\n    } catch (err) {\r\n      action.setLoading(false);\r\n    }\r\n  }),\r\n  fetchDomains: action(async (action, payload) => {\r\n    try {\r\n      let domains = await axios.get(\r\n        \"https://atharv-ed-portal.herokuapp.com/select/?type=domains\"\r\n      );\r\n      action.setDomains(domains.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }),\r\n  setTasks: thunk(async (action, payload) => {\r\n    try {\r\n      let tasks = await axios.post(\r\n        \"https://atharv-ed-portal.herokuapp.com/reports\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      console.log(\"Here\");\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n    }\r\n  }),\r\n  fetchActivityTask: thunk(async (action, payload) => {\r\n    try {\r\n      action.setTaskLoading(true);\r\n      let tasks = await axios.get(\r\n        `https://atharv-ed-portal.herokuapp.com/reports/${payload}`,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      console.log(tasks);\r\n      action.setActivityTask({\r\n        tasks: tasks.data,\r\n        activityid: payload\r\n      });\r\n    } catch (err) {\r\n      action.setTaskLoading(false);\r\n    }\r\n  }),\r\n  updateTask: thunk(async (action, payload) => {\r\n    try {\r\n      let tasks = await axios.post(\r\n        `https://atharv-ed-portal.herokuapp.com/reports/task`,\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  }),\r\n  deleteTask: thunk(async (action, payload) => {\r\n    try {\r\n      let tasks = await axios.delete(\r\n        `https://atharv-ed-portal.herokuapp.com/reports/task/${payload.reportid}`,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  }),\r\n  updateComment: thunk(async (action, payload) => {\r\n    try {\r\n      let tasks = await axios.post(\r\n        `https://atharv-ed-portal.herokuapp.com/reports/${payload.reportid}/comment`,\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  })\r\n};\r\n","import React from \"react\";\r\nimport { createStore, StoreProvider } from \"easy-peasy\";\r\nimport Main from \"./components/Main/Main\";\r\nimport initStore from \"./models/store\";\r\nconst store = createStore(initStore);\r\n\r\nfunction App() {\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <Main />\r\n    </StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}