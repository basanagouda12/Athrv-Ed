{"version":3,"sources":["components/Auth/Register/Register.jsx","components/Auth/Login/Login.jsx","components/Auth/WelcomeSection/WelcomeSection.jsx","components/Auth/AuthNav/AuthNav.jsx","components/Auth/Auth.jsx","components/Auth/authorization.js","components/Main/UploadCSV/UploadCSV.jsx","components/Main/DrawableNav/DrawableItems/DrawableItems.jsx","components/Main/DrawableNav/drawableNavStyles.js","components/Main/DrawableNav/DrawableNav.jsx","components/Main/Dashboard/AddActivity/AddActivity.jsx","components/UI/LoadingScreenSmall.jsx","components/UI/LoadingContainer.jsx","components/Main/Dashboard/dashboardStyles.js","components/UI/Copyrights.jsx","components/UI/Title.jsx","components/Main/ActivityList/ActivityListItem/ActivityListItem.jsx","components/Main/ActivityList/ActivityHead/ActivityHead.jsx","components/Main/ActivityList/ActivityList.jsx","components/Main/Dashboard/AddLeaveNote/AddLeaveNote.jsx","components/Main/Dashboard/LeaveNotes/LeaveNotes.jsx","components/Main/Dashboard/Dashboard.jsx","components/Main/TopNav/topNavStyles.js","components/Main/TopNav/TopNav.jsx","components/Main/Activity/AddTask/AddTask.jsx","components/Main/Activity/activityStyles.js","components/Main/Activity/TaskList/TaskItem/TaskItem.jsx","components/Main/Activity/TaskList/TaskList.jsx","components/Main/Activity/TaskList/TaskFilterActions/FilterByName/FilterByName.jsx","components/Main/Activity/TaskList/TaskFilterActions/FilterByDate/FilterByDate.jsx","components/Main/Activity/TaskList/TaskFilterActions/TaskFilterActions.jsx","components/Main/Activity/Activity.jsx","components/Main/Profile/Settings/Settings.jsx","components/Main/Profile/MyInfo/AddQualification.jsx","components/Main/Profile/MyInfo/AddSkills.jsx","components/Main/Profile/MyInfo/MyInfo.jsx","components/Main/ProtectedMainSection/mainStyles.js","components/Main/ProtectedMainSection/ProtectedMainSection.jsx","components/Main/Main.jsx","models/profileMod.js","models/authMod.js","models/axios.proxy.js","models/store.js","models/admin.js","models/attendence.js","models/activities.js","models/activity.js","App.jsx","index.js"],"names":["Register","setEmail","email","setCPassword","cpassword","setPassword","password","errors","useStoreState","state","authMod","setErrors","useStoreActions","action","CLEAR_ERRORS","pwdError","find","err","type","cpwdError","emailError","className","htmlFor","name","id","placeholder","value","onChange","e","target","length","message","Login","iwdCred","console","log","WelcomeSection","AuthNav","resolveClassName","linkText","window","location","pathname","to","Auth","useState","isAuth","isAdmin","isAdminAttempt","isRegularUserAuth","profileMod","profile","checkAdmin","FETCH_ALL_USERS","setAuth","SET_REGULAR_AUTH","checkRegularUser","FETCH_PROFILE_START","loginUser","FETCH_LOGIN_START","registerUser","FETCH_REGISTER_START","useEffect","checkAdminUser","isRegularAuth","localStorage","getItem","authorization","noValidate","onSubmit","preventDefault","path","UploadCSV","open","handleClose","uploadableFile","setUploadFile","uploadFile","attendence","UPLOAD_FILE_START","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","FormControl","FormLabel","Input","event","files","DialogActions","Button","onClick","color","DrawableItems","isUploadModalOpen","setUploadModalOpen","ListItem","button","ListItemIcon","ListItemText","primary","href","useStyles","makeStyles","theme","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","DrawableNav","handleDrawerClose","classes","Drawer","variant","paper","clsx","IconButton","Divider","List","formControl","minWidth","selectEmpty","marginTop","AddActivity","users","React","domain","setDomain","selectedTeam","setTeam","supervisor","setSuperVisor","activityTitle","setTitle","activity_type","setType","postActivity","activities","POST_ACTIVITY_START","TextField","autoFocus","margin","label","fullWidth","InputLabel","Select","required","labelId","MenuItem","Autocomplete","multiple","options","filter","member","some","selectedMember","user_id","getOptionLabel","option","fname","lname","renderInput","params","work","map","super_id","title","LoadingScreenSmall","style","alt","src","LoadingContainer","isLoading","children","root","appBarSpacer","content","flexGrow","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","fixedWidth","maxWidth","Copyright","Typography","align","Link","Date","getFullYear","Title","props","component","gutterBottom","ActivityItem","row","linkToActivity","activityid","TableRow","TableCell","activity_title","ActivityHead","TableHead","ActivityList","isProfileLoaded","isFetching","fetchActivities","FETCH_ACTIVITIES_START","fetchActivitiesReset","FETCH_ACTIVITIES_REQUEST","isActivitiesLoading","Fragment","Table","size","TableBody","key","dateBox","AddLeaveNote","reason","setReason","StartDate","setStartDate","EndDate","setEndDate","adminmail","setAdminmail","alter_user_id","postLeaveNote","POST_LEAVE_NOTE_START","InputLabelProps","shrink","zIndex","backgroundColor","palette","background","listContainer","list","listItem","marginBottom","listIcon","marginRight","LeaveNotes","setOpen","fetchLeaveNotes","FETCH_LEAVE_NOTES_START","fetchLeaveNotesReset","FETCH_LEAVE_NOTES_REQUEST","updateLeaveNotes","UPDATE_LEAVE_NOTE_START","isLeaveNotesLoading","isLeaveFetching","leaveNotes","Collapse","in","Paper","item","dense","_id","status","secondary","toLocaleDateString","ListItemSecondaryAction","uuid","CurrentDate","Dashboard","isCalenderLoading","fetchAttendance","FETCH_ATTENDENCE_START","fetchAttendanceReset","FETCH_ATTENDENCE_REQUEST","attendance","getProfile","isProfileLoading","openActivityModal","setActivityModalOpen","openLeaveModal","setLeaveModalOpen","Container","Grid","xs","data","overview","md","lg","Box","pt","paddingRight","appBar","drawer","appBarShift","marginLeft","menuButton","menuButtonHidden","TopNav","handleDrawerOpen","AppBar","Toolbar","edge","aria-label","noWrap","AddTask","activityId","postTask","activity","POST_TASK_START","task_description","setDescription","dependency","setDependency","category","setCategory","endStatus","setStatus","progress","setProgress","newskill","setNewskill","knowledegeGained","setKnowledge","inputProps","min","max","step","report","milestone","suid","progressInfo","userId","newSkills","spaceDown1","dispFlex","dispFlexStart","bullet","transform","fontSize","fontWeight","pos","TaskItem","activity_id","deleteTask","DELETE_TASK_START","Card","CardContent","date","status_eod","knowledge_gained","task","iWasAssigned","report_id","reportid","TaskList","tasks","isTasksLoading","fetchTasks","FETCH_TASKS_START","clearTasks","CLEAR_TASKS","FilterByName","getAllUtil","filterByNames","setName","filterSelectedOptions","values","FilterByDate","setDate","filterByDate","currentTarget","textField","TaskFilterActions","Activity","useParams","tasksBuffer","setTasksBuffer","openModal","setOpenModal","names","isTransaction","updatedTasks","isTodaysTaskUpdated","field","uniqueTasks","forEach","uniqueTask","push","paperStyling","formElementWidth","formFullWidth","SettingsDemo","prevEmail","prevFname","prevLname","prevSex","sex","prevSem","sem","prevDob","dob","prevPhone","phone","prevAddress1","address_line1","prevAddress2","address_line2","prevCity","city","prevDist","dist","prevState","prevPin","pin","prevaboutme","aboutme","prevbranch","branch","updateProfile","POST_PROFILE_START","setSex","setSem","setbranch","setFname","setLname","setDob","setPhone","setaddress_line1","setaddress_line2","setCity","setDist","setSt","setPin","setaboutme","defaultValue","lastChild","textContent","InputProps","multiline","AddQualification","qualification","setQualification","college","setCollege","grade","setGrade","board","setBoard","postQualification","POST_QUALIFICATION_START","isNaN","AddSkills","skills","setSkills","postSkills","POST_SKILLS_START","MyInfo","openQualificationModal","setOpenQualificationModal","openSkillsModal","setOpenSkillsModal","getprofile","isProfileFetching","cursor","ProtectedMainSection","CssBaseline","Main","clearProfile","CLEAR_PROFILE","render","clear","Component","rest","isInserting","isSkillsInserting","isQualificationInserting","payload","FETCH_PROFILE_REQUEST","FETCH_PROFILE_SUCCESS","FETCH_PROFILE_FAIL","thunk","a","axios","get","headers","response","POST_PROFILE_REQUEST","POST_PROFILE_SUCCESS","POST_PROFILE_FAIL","post","POST_SKILLS_REQUEST","POST_SKILLS_SUCCESS","POST_SKILLS_FAIL","POST_QUALIFICATION_REQUEST","POST_QUALIFICATION_SUCCESS","POST_QUALIFICATION_FAIL","isChecking","isAdminAuthAttempt","token","FETCH_LOGIN_REQUEST","FETCH_LOGIN_SUCCESS","FETCH_LOGIN_FAIL","authData","setItem","FETCH_REGISTER_REQUEST","FETCH_REGISTER_SUCCESS","FETCH_REGISTER_FAIL","FETCH_ALL_USERS_START","paylaod","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAIL","axiosMod","baseURL","admin","isTaskLoading","domains","userTasks","setUserTasks","isUserTasksLoading","setUserTasksLoading","setDomains","setTaskLoading","setActivityTask","setLoading","setActivities","fetchAllUserTasks","submitActivityTeam","then","incompleteActivity","fetchDomains","setTasks","fetchActivityTask","updateTask","delete","updateComment","INSERT_ATTENDENCE","correctDate","details","total","FETCH_ATTENDENCE_ERROR","isLeaveEditing","INSERT_LEAVE_NOTES","POST_LEAVE_NOTE_REQUEST","POST_LEAVE_NOTE_ERROR","FETCH_LEAVE_NOTES_ERROR","leave","UPDATE_LEAVE_NOTE_REQUEST","UPDATE_LEAVE_NOTE_SUCCESS","UPDATE_LEAVE_NOTE_FAIL","leaveNote","UPLOAD_FILE_REQUEST","formData","FormData","append","file","isEditing","POST_ACTIVITY_REQUEST","EDIT_ACTIVITY_REQUEST","POST_ACTIVITY_ERROR","EDIT_ACTIVITY_ERROR","FETCH_ACTIVITIES_ERROR","INSERT_ACTIVITIES","EDIT_ACTIVITY_START","put","POST_TASK_REQUEST","EDIT_TASK_REQUEST","FETCH_TASKS_REQUEST","POST_TASK_ERROR","EDIT_TASK_ERROR","FETCH_TASKS_ERROR","INSERT_TASKS","reportId","EDIT_TASK_START","store","createStore","initStore","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.242b0b5a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nfunction Register({\r\n  setEmail,\r\n  email,\r\n  setCPassword,\r\n  cpassword,\r\n  setPassword,\r\n  password\r\n}) {\r\n  let errors = useStoreState(state => state.authMod.errors);\r\n  let setErrors = useStoreActions(action => action.authMod.CLEAR_ERRORS);\r\n  let pwdError = errors.find(err => err.type === \"password\");\r\n  let cpwdError = errors.find(err => err.type === \"cpassword\");\r\n  let emailError = errors.find(err => err.type === \"email\");\r\n  return (\r\n    <>\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"email\">\r\n        Email\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {emailError ? <p className=\"form-hint\">{emailError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"password\">\r\n        Password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        value={password}\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {pwdError ? <p className=\"form-hint\">{pwdError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"cpassword\">\r\n        Confirm password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"cpassword\"\r\n        id=\"cpassword\"\r\n        placeholder=\"Please confirm your password\"\r\n        value={cpassword}\r\n        onChange={e => {\r\n          setCPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n      />\r\n      {cpwdError ? <p className=\"form-hint\">{cpwdError.message}</p> : null}\r\n      <input\r\n        className=\"mr-16t mr-8b form-inp wi-300\"\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nfunction Login({ email, setEmail, password, setPassword }) {\r\n  let errors = useStoreState(state => state.authMod.errors);\r\n  let setErrors = useStoreActions(action => action.authMod.CLEAR_ERRORS);\r\n  let pwdError = errors.find(err => err.type === \"password\");\r\n  let emailError = errors.find(err => err.type === \"email\");\r\n  let iwdCred = errors.find(err => err.type === \"Invalid Credentials\");\r\n  return (\r\n    <>\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"email\">\r\n        Email\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        value={email}\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n          console.log(errors);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n        placeholder=\"Enter your email\"\r\n      />\r\n      {emailError ? <p className=\"form-hint\">{emailError.message}</p> : null}\r\n      <label className=\"mr-16t form-labl\" htmlFor=\"password\">\r\n        Password\r\n      </label>\r\n      <input\r\n        className=\"mr-8b form-inp wi-300\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        value={password}\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n          if (errors.length) setErrors([]);\r\n        }}\r\n        placeholder=\"Enter your password\"\r\n      />\r\n      {pwdError ? <p className=\"form-hint\">{pwdError.message}</p> : null}\r\n      <input\r\n        className=\"mr-16t mr-8b form-inp wi-300\"\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n      />\r\n\r\n      {iwdCred ? <p className=\"form-hint\">{iwdCred.message}</p> : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction WelcomeSection() {\r\n  return (\r\n    <article className=\"pd-64x pd-64t flex-basis-50-l\">\r\n      <h2 className=\"mr-32b\">Welcome</h2>\r\n      <p className=\"lh-16\">\r\n        Please login or register to access the AtarV-Ed portal facility which\r\n        provides tools to track your personal and domain's progress.\r\n      </p>\r\n      <div className=\"side-note mr-32t lh-16\">\r\n        <p>\r\n          Please note - You must be already a core member of AtarV-Ed to be able\r\n          to register\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default WelcomeSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AuthNav() {\r\n  function resolveClassName(linkText) {\r\n    let currentPath = window.location.pathname;\r\n    return currentPath === linkText ? \"pd-24x pd-12y current\" : \"pd-24x pd-12y\";\r\n  }\r\n  return (\r\n    <nav id=\"auth-nav\" className=\"nav-t1\">\r\n      <ul className=\"mr-32b\">\r\n        <li>\r\n          <Link to=\"/register\" className={resolveClassName(\"/register\")}>\r\n            Register\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/login\" className={resolveClassName(\"/login\")}>\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Register from \"./Register/Register\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Login from \"./Login/Login\";\r\nimport WelcomeSection from \"./WelcomeSection/WelcomeSection\";\r\nimport \"./auth.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AuthNav from \"./AuthNav/AuthNav\";\r\nimport { authorization } from \"./authorization\";\r\n\r\nfunction Auth() {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [cpassword, setCPassword] = useState(\"\");\r\n  let isAuth = useStoreState(state => state.authMod.isAuth);\r\n  let isAdmin = useStoreState(state => state.authMod.isAdminAttempt);\r\n  let { type: isRegularUserAuth } = useStoreState(\r\n    state => state.profileMod.profile\r\n  );\r\n  let checkAdmin = useStoreActions(action => action.authMod.FETCH_ALL_USERS);\r\n  let setAuth = useStoreActions(action => action.authMod.SET_REGULAR_AUTH);\r\n  let checkRegularUser = useStoreActions(\r\n    action => action.profileMod.FETCH_PROFILE_START\r\n  );\r\n  let loginUser = useStoreActions(action => action.authMod.FETCH_LOGIN_START);\r\n  let registerUser = useStoreActions(\r\n    action => action.authMod.FETCH_REGISTER_START\r\n  );\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      authorization(\r\n        isAdmin,\r\n        checkAdmin,\r\n        checkRegularUser,\r\n        isRegularUserAuth,\r\n        setAuth\r\n      );\r\n    }\r\n  }, [isAuth, isRegularUserAuth]);\r\n  if (!isAuth)\r\n    return (\r\n      <section id=\"auth\" className=\"disp-flex\">\r\n        <WelcomeSection />\r\n        <form\r\n          id=\"auth-register\"\r\n          action=\"\"\r\n          className=\"flex-basis-50-l pd-64x pd-64t bg-light pd-64b\"\r\n          noValidate={true}\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            if (window.location.pathname === \"/register\")\r\n              registerUser({ email, password, cpassword });\r\n            else loginUser({ email, password });\r\n          }}\r\n        >\r\n          <h2 className=\"prim-text-clr\">Register your account</h2>\r\n          <p className=\"lh-16 mr-16t mr-32b\">\r\n            Please enter the same email as entered in the AtarV-Ed membership\r\n            form.\r\n          </p>\r\n          <AuthNav />\r\n          <Switch>\r\n            <Route path=\"/register\">\r\n              <Register\r\n                setEmail={setEmail}\r\n                email={email}\r\n                setPassword={setPassword}\r\n                setCPassword={setCPassword}\r\n                cpassword={cpassword}\r\n                password={password}\r\n              />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login\r\n                setEmail={setEmail}\r\n                email={email}\r\n                setPassword={setPassword}\r\n                password={password}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </form>\r\n      </section>\r\n    );\r\n  else\r\n    return (\r\n      <Redirect\r\n        to={\r\n          window.location.pathname === \"/register\"\r\n            ? \"/main/settings\"\r\n            : \"/main/dashboard\"\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n","export function authorization(\r\n  isAdmin,\r\n  checkAdminUser,\r\n  checkRegularUser,\r\n  isRegularAuth,\r\n  setAuth\r\n) {\r\n  if (isRegularAuth) {\r\n    setAuth(true);\r\n  } else if (isAdmin && localStorage.getItem(\"token\")) {\r\n    checkAdminUser();\r\n  } else if (localStorage.getItem(\"token\")) {\r\n    checkRegularUser();\r\n  } else if (isRegularAuth) {\r\n    setAuth(true);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, FormLabel, Input } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText\r\n} from \"@material-ui/core\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nfunction UploadCSV({ open, handleClose }) {\r\n  let [uploadableFile, setUploadFile] = useState({});\r\n  let uploadFile = useStoreActions(\r\n    action => action.attendence.UPLOAD_FILE_START\r\n  );\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Upload Calender CSV</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <FormControl>\r\n          <FormLabel>Upload the CSV file</FormLabel>\r\n          <Input\r\n            type=\"file\"\r\n            onChange={event => {\r\n              console.log(event.target.files);\r\n              setUploadFile(event.target.files[0]);\r\n            }}\r\n          ></Input>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={event => handleClose()} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => {\r\n            handleClose();\r\n            uploadFile(uploadableFile);\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit CSV\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default UploadCSV;\r\n","import React from \"react\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport LogoutIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadCSV from \"../../UploadCSV/UploadCSV\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst DrawableItems = () => {\r\n  let [isUploadModalOpen, setUploadModalOpen] = useState(false);\r\n\r\n  let { type } = useStoreState(state => state.profileMod.profile);\r\n  function handleModalOpen() {\r\n    setUploadModalOpen(true);\r\n  }\r\n  function handleModalClose() {\r\n    setUploadModalOpen(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <Link to=\"/main/dashboard\">\r\n          <ListItemText primary=\"Dashboard\" />\r\n        </Link>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <LogoutIcon />\r\n        </ListItemIcon>\r\n        <Link to=\"/logout\">\r\n          <ListItemText primary=\"Logout\" />\r\n        </Link>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SettingsIcon />\r\n        </ListItemIcon>\r\n        <Link to=\"/main/settings\">\r\n          <ListItemText primary=\"Settings\" />\r\n        </Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <PersonIcon />\r\n        </ListItemIcon>\r\n        <Link to=\"/main/profile\">\r\n          <ListItemText primary=\"Profile\" />\r\n        </Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        {type === \"A\" ? (\r\n          <Button\r\n            href=\"#text-buttons\"\r\n            color=\"primary\"\r\n            onClick={handleModalOpen}\r\n          >\r\n            Upload CSV\r\n          </Button>\r\n        ) : null}\r\n      </ListItem>\r\n      <UploadCSV open={isUploadModalOpen} handleClose={handleModalClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawableItems;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbarIcon: {\r\n    //\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawerPaper: {\r\n    //\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    //\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport DrawableItems from \"./DrawableItems/DrawableItems\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport clsx from \"clsx\";\r\nimport useStyles from \"./drawableNavStyles\";\r\n\r\nconst DrawableNav = ({ handleDrawerClose, open }) => {\r\n  let classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <DrawableItems />\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawableNav;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, FormControl } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AddActivity = ({ open, handleClose }) => {\r\n  const classes = useStyles();\r\n  const activityTypes = [\"Project\", \"Training\", \"Workshop\"];\r\n  let users = useStoreState(state => state.authMod.users);\r\n  const [domain, setDomain] = React.useState(\"\");\r\n  const [selectedTeam, setTeam] = useState([]);\r\n  const [supervisor, setSuperVisor] = useState({});\r\n  const [activityTitle, setTitle] = useState(\"\");\r\n  const [activity_type, setType] = useState(activityTypes[0]);\r\n\r\n  const postActivity = useStoreActions(\r\n    action => action.activities.POST_ACTIVITY_START\r\n  );\r\n  const handleChange = event => {\r\n    setDomain(event.target.value);\r\n  };\r\n\r\n  const handleTypeChange = event => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add Activity</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={activityTitle}\r\n          onChange={e => setTitle(e.target.value)}\r\n          id=\"activity_title\"\r\n          label=\"Activity title\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Activity domain</InputLabel>\r\n          <Select\r\n            required\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={domain}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={\"web development\"}>Web development</MenuItem>\r\n            <MenuItem value={\"IOT\"}>IOT</MenuItem>\r\n            <MenuItem value={\"android development\"}>Android</MenuItem>\r\n            <MenuItem value={\"Artificial Intelligence\"}>AI</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Activity domain</InputLabel>\r\n          <Select\r\n            required\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={activity_type}\r\n            onChange={handleTypeChange}\r\n          >\r\n            <MenuItem value={\"Project\"}>Project</MenuItem>\r\n            <MenuItem value={\"Workshop\"}>Workshop</MenuItem>\r\n            <MenuItem value={\"Training\"}>Training</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Autocomplete\r\n          id=\"tags-standard\"\r\n          multiple\r\n          options={users.filter(\r\n            member =>\r\n              !selectedTeam.some(\r\n                selectedMember => selectedMember.user_id === member.user_id\r\n              )\r\n          )}\r\n          getOptionLabel={option => option.fname + \" \" + option.lname}\r\n          onChange={(e, value) => {\r\n            setTeam(value);\r\n            console.log(value);\r\n          }}\r\n          renderInput={params => (\r\n            <TextField\r\n              required\r\n              {...params}\r\n              variant=\"standard\"\r\n              label=\"Team members\"\r\n              placeholder=\"Team\"\r\n              fullWidth\r\n            />\r\n          )}\r\n        />\r\n        <Autocomplete\r\n          id=\"tags-standard\"\r\n          options={selectedTeam}\r\n          getOptionLabel={option => option.fname + \" \" + option.lname}\r\n          onChange={(e, value) => {\r\n            setSuperVisor(value);\r\n            console.log(value);\r\n          }}\r\n          renderInput={params => (\r\n            <TextField\r\n              required\r\n              {...params}\r\n              variant=\"standard\"\r\n              label=\"Supervisor\"\r\n              placeholder=\"Enter the supervisor\"\r\n              fullWidth\r\n            />\r\n          )}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => {\r\n            console.log({\r\n              work: domain,\r\n              user_id: selectedTeam.map(member => member.user_id),\r\n              super_id: supervisor.user_id,\r\n              activity_type,\r\n              title: activityTitle\r\n            });\r\n            postActivity({\r\n              work: domain,\r\n              user_id: selectedTeam.map(member => member.user_id),\r\n              super_id: supervisor.user_id,\r\n              activity_type,\r\n              title: activityTitle\r\n            });\r\n            handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit activity\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddActivity;\r\n","import React from \"react\";\r\n\r\nfunction LoadingScreenSmall() {\r\n  return (\r\n    <div className=\"wi-100p txt-align-center\" style={{ padding: \"32px\" }}>\r\n      <img\r\n        className=\"wi-30\"\r\n        alt=\"Loading small amount of data\"\r\n        src=\"/loading.gif\"\r\n      />\r\n      <p>loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreenSmall;\r\n","import React from \"react\";\r\nimport LoadingScreenSmall from \"./LoadingScreenSmall\";\r\n\r\nfunction LoadingContainer({ isLoading, children }) {\r\n  if (isLoading) return <LoadingScreenSmall />;\r\n  else return <>{children}</>;\r\n}\r\n\r\nexport default LoadingContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //\r\n    display: \"flex\"\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar, //\r\n  content: {\r\n    //\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    //\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  fixedWidth: {\r\n    maxWidth: \"70vw\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        AthrvEd\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ActivityItem({ row }) {\r\n  let linkToActivity = `/main/activity/${row.activityid}`;\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <Link to={linkToActivity}>{row.activity_title}</Link>\r\n      </TableCell>\r\n      <TableCell>{row.activity_type}</TableCell>\r\n      <TableCell>{row.title || row.work}</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default ActivityItem;\r\n","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nfunction ActivityHead() {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>Title</TableCell>\r\n        <TableCell>Type</TableCell>\r\n        <TableCell>Domain</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default ActivityHead;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Title from \"../../UI/Title\";\r\nimport ActivityItem from \"./ActivityListItem/ActivityListItem\";\r\nimport ActivityHead from \"./ActivityHead/ActivityHead\";\r\nimport { useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport LoadingContainer from \"../../UI/LoadingContainer\";\r\n\r\nexport default function ActivityList() {\r\n  let { type, isFetching: isProfileLoaded } = useStoreState(\r\n    state => state.profileMod.profile\r\n  );\r\n  let fetchActivities = useStoreActions(\r\n    action => action.activities.FETCH_ACTIVITIES_START\r\n  );\r\n  let fetchActivitiesReset = useStoreActions(\r\n    action => action.activities.FETCH_ACTIVITIES_REQUEST\r\n  );\r\n  let { isFetching: isActivitiesLoading, activities } = useStoreState(\r\n    state => state.activities\r\n  );\r\n  let isAuth = useStoreState(state => state.authMod.isAuth);\r\n\r\n  useEffect(() => {\r\n    console.log(type, isProfileLoaded);\r\n    if (!isProfileLoaded && isActivitiesLoading && isAuth)\r\n      fetchActivities({ type });\r\n    return () => fetchActivitiesReset();\r\n  }, [type, isProfileLoaded]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Current Activities</Title>\r\n      <LoadingContainer isLoading={isActivitiesLoading}>\r\n        <Table size=\"small\">\r\n          <ActivityHead />\r\n          <TableBody>\r\n            {activities.map(row => (\r\n              <ActivityItem row={row} key={row.activityid} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </LoadingContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, FormControl } from \"@material-ui/core\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dateBox: {\r\n    margin: 10\r\n  }\r\n}));\r\nconst AddLeaveNote = ({ open, handleClose }) => {\r\n  const [reason, setReason] = useState(\"\");\r\n  const [StartDate, setStartDate] = useState(\"\");\r\n  const [EndDate, setEndDate] = useState(\"\");\r\n  const [adminmail, setAdminmail] = useState(\"\");\r\n  const type = useStoreState(state => state.profileMod.profile.type);\r\n  let user_id = useStoreState(state => state.profileMod.profile.user_id);\r\n  let alter_user_id = useStoreState(state => state.authMod.user_id);\r\n\r\n  const postLeaveNote = useStoreActions(\r\n    action => action.attendence.POST_LEAVE_NOTE_START\r\n  );\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Make a new leave note</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"leave_reason\"\r\n          value={reason}\r\n          onChange={e => setReason(e.target.value)}\r\n          label=\"Reason for the leave\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <FormControl className={classes.dateBox}>\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Start date\"\r\n            type=\"date\"\r\n            value={StartDate}\r\n            onChange={e => setStartDate(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.dateBox}>\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"End date\"\r\n            value={EndDate}\r\n            onChange={e => setEndDate(e.target.value)}\r\n            type=\"date\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.dateBox}>\r\n          <TextField\r\n            id=\"adminmail\"\r\n            label=\"Admin mail\"\r\n            value={adminmail}\r\n            onChange={e => setAdminmail(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => {\r\n            handleClose();\r\n            let user_id_final = user_id || alter_user_id;\r\n            postLeaveNote({\r\n              reason,\r\n              StartDate,\r\n              EndDate,\r\n              adminmail,\r\n              type,\r\n              user_id: user_id_final\r\n            });\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddLeaveNote;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport LoadingContainer from \"../../../UI/LoadingContainer\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  ListItemSecondaryAction,\r\n  ListItem\r\n} from \"@material-ui/core\";\r\n\r\n// to be seperated\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    zIndex: 3,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  listContainer: {\r\n    padding: 5\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  listItem: {\r\n    padding: 10,\r\n    marginBottom: 2\r\n  },\r\n  listIcon: {\r\n    marginRight: 10\r\n  }\r\n}));\r\n\r\nexport default function LeaveNotes({ user_id }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let { type } = useStoreState(state => state.profileMod.profile);\r\n  let fetchLeaveNotes = useStoreActions(\r\n    action => action.attendence.FETCH_LEAVE_NOTES_START\r\n  );\r\n  let fetchLeaveNotesReset = useStoreActions(\r\n    action => action.attendence.FETCH_LEAVE_NOTES_REQUEST\r\n  );\r\n  let updateLeaveNotes = useStoreActions(\r\n    action => action.attendence.UPDATE_LEAVE_NOTE_START\r\n  );\r\n  let isLeaveNotesLoading = useStoreState(\r\n    state => state.attendence.isLeaveFetching\r\n  );\r\n  let leaveNotes = useStoreState(state => state.attendence.leaveNotes);\r\n\r\n  useEffect(() => {\r\n    if (isLeaveNotesLoading) fetchLeaveNotes({ user_id });\r\n    return () => fetchLeaveNotesReset();\r\n  }, []);\r\n\r\n  return (\r\n    <LoadingContainer isLoading={isLeaveNotesLoading}>\r\n      <Button\r\n        href=\"#text-buttons\"\r\n        color=\"primary\"\r\n        onClick={() => setOpen(!open)}\r\n      >\r\n        {!open ? \"View\" : \"Hide\"} leave notes\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div className={classes.root}>\r\n          <List className={classes.list}>\r\n            <Paper>\r\n              {leaveNotes.length ? (\r\n                leaveNotes.map(item => (\r\n                  <ListItem\r\n                    dense\r\n                    key={item._id}\r\n                    style={{\r\n                      backgroundColor:\r\n                        item.status === \"accepted\"\r\n                          ? \"#a8ff9e\"\r\n                          : item.status === \"rejected\"\r\n                          ? \"#ff8279\"\r\n                          : \"#fff\"\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      className={classes.listItem}\r\n                      primary={item.reason}\r\n                      secondary={\r\n                        new Date(item.StartDate).toLocaleDateString() +\r\n                        \" to \" +\r\n                        new Date(item.EndDate).toLocaleDateString()\r\n                      }\r\n                    />\r\n                    {type === \"A\" ? (\r\n                      <ListItemSecondaryAction>\r\n                        <CheckIcon\r\n                          className={classes.listIcon}\r\n                          color=\"action\"\r\n                          onClick={event => {\r\n                            let {\r\n                              uuid,\r\n                              CurrentDate,\r\n                              adminmail,\r\n                              EndDate,\r\n                              StartDate\r\n                            } = item;\r\n                            updateLeaveNotes({\r\n                              uuid,\r\n                              CurrentDate,\r\n                              adminmail,\r\n                              EndDate,\r\n                              StartDate,\r\n                              status: \"accepted\"\r\n                            });\r\n                          }}\r\n                        />\r\n                        <CancelIcon\r\n                          onClick={event => {\r\n                            let {\r\n                              uuid,\r\n                              CurrentDate,\r\n                              adminmail,\r\n                              EndDate,\r\n                              StartDate\r\n                            } = item;\r\n                            updateLeaveNotes({\r\n                              uuid,\r\n                              CurrentDate,\r\n                              adminmail,\r\n                              EndDate,\r\n                              StartDate,\r\n                              status: \"rejected\"\r\n                            });\r\n                          }}\r\n                        />\r\n                      </ListItemSecondaryAction>\r\n                    ) : null}\r\n                  </ListItem>\r\n                ))\r\n              ) : (\r\n                <ListItemText\r\n                  style={{ padding: \"16px\" }}\r\n                  primary=\"No leave notes present\"\r\n                />\r\n              )}\r\n            </Paper>\r\n          </List>\r\n        </div>\r\n      </Collapse>\r\n    </LoadingContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport AddActivity from \"./AddActivity/AddActivity\";\r\nimport CalendarHeatmap from \"reactjs-calendar-heatmap\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport LoadingContainer from \"../../UI/LoadingContainer\";\r\nimport useStyles from \"./dashboardStyles\";\r\nimport Copyright from \"../../UI/Copyrights\";\r\nimport ActivityList from \"../ActivityList/ActivityList\";\r\nimport AddLeaveNote from \"./AddLeaveNote/AddLeaveNote\";\r\nimport LeaveNotes from \"./LeaveNotes/LeaveNotes\";\r\n\r\n// imrovement needed\r\nconst Dashboard = () => {\r\n  let user_id = useStoreState(state => state.profileMod.profile.user_id);\r\n  let alter_user_id = useStoreState(state => state.authMod.user_id);\r\n\r\n  let { type } = useStoreState(state => state.profileMod);\r\n  let isCalenderLoading = useStoreState(state => state.attendence.isFetching);\r\n  let fetchAttendance = useStoreActions(\r\n    action => action.attendence.FETCH_ATTENDENCE_START\r\n  );\r\n  let fetchAttendanceReset = useStoreActions(\r\n    action => action.attendence.FETCH_ATTENDENCE_REQUEST\r\n  );\r\n  let attendance = useStoreState(state => state.attendence.attendence);\r\n\r\n  let getProfile = useStoreActions(\r\n    action => action.profileMod.FETCH_PROFILE_START\r\n  );\r\n  let isProfileLoading = useStoreState(state => state.profileMod.isFetching);\r\n\r\n  useEffect(() => {\r\n    if (isCalenderLoading)\r\n      fetchAttendance({ user_id: user_id || alter_user_id });\r\n    if (isProfileLoading) getProfile();\r\n    return () => fetchAttendanceReset();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openActivityModal, setActivityModalOpen] = useState(false);\r\n  const [openLeaveModal, setLeaveModalOpen] = useState(false);\r\n\r\n  const handleActivityModalOpen = () => {\r\n    setActivityModalOpen(true);\r\n  };\r\n\r\n  const handleActivityModalClose = () => {\r\n    setActivityModalOpen(false);\r\n  };\r\n\r\n  const handleLeaveModalOpen = () => {\r\n    setLeaveModalOpen(true);\r\n  };\r\n\r\n  const handleLeaveModalClose = () => {\r\n    setLeaveModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.fixedWidth}>\r\n              <LoadingContainer isLoading={isCalenderLoading}>\r\n                {attendance.length ? (\r\n                  <CalendarHeatmap\r\n                    data={attendance}\r\n                    color={\"#f00\"}\r\n                    overview={\"year\"}\r\n                  ></CalendarHeatmap>\r\n                ) : null}\r\n              </LoadingContainer>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <AddLeaveNote\r\n            open={openLeaveModal}\r\n            handleClose={handleLeaveModalClose}\r\n          />\r\n          {type === \"A\" ? (\r\n            <AddActivity\r\n              open={openActivityModal}\r\n              handleClose={handleActivityModalClose}\r\n            />\r\n          ) : null}\r\n\r\n          <Grid item xs={12} md={6}>\r\n            {type === \"A\" ? (\r\n              <Button\r\n                href=\"#text-buttons\"\r\n                color=\"primary\"\r\n                onClick={handleActivityModalOpen}\r\n              >\r\n                Add new activity\r\n              </Button>\r\n            ) : null}\r\n\r\n            <Paper className={classes.paper}>\r\n              <ActivityList />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Grid item xs={12} md={6} lg={2}>\r\n              {type !== \"A\" ? (\r\n                <Button\r\n                  href=\"#text-buttons\"\r\n                  color=\"primary\"\r\n                  onClick={handleLeaveModalOpen}\r\n                >\r\n                  Apply leave\r\n                </Button>\r\n              ) : null}\r\n            </Grid>\r\n            <LeaveNotes user_id={user_id || alter_user_id} />\r\n          </Grid>\r\n          <Grid item xs={7} md={10} lg={12}>\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"./topNavStyles\";\r\n\r\nfunction TopNav({ open, handleDrawerOpen }) {\r\n  let classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Dashboard\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopNav;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, FormControl } from \"@material-ui/core\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AddTask = ({ open, handleClose, user_id, activityId }) => {\r\n  console.log(user_id);\r\n  const classes = useStyles();\r\n  let postTask = useStoreActions(action => action.activity.POST_TASK_START);\r\n  const [task_description, setDescription] = useState();\r\n  const [dependency, setDependency] = useState(0);\r\n  const [category, setCategory] = useState(\"Web development\");\r\n  const [endStatus, setStatus] = useState(\"\");\r\n  const [progress, setProgress] = useState(\"\");\r\n  const [newskill, setNewskill] = useState(\"\");\r\n  const [knowledegeGained, setKnowledge] = useState(\"\");\r\n\r\n  const handleCategoryChange = event => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const handleSetStatus = event => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add Activity</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"task_description\"\r\n          label=\"Task description\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={task_description}\r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">\r\n            Category of work\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category}\r\n            onChange={handleCategoryChange}\r\n          >\r\n            <MenuItem value={\"Web development\"}>Web development</MenuItem>\r\n            <MenuItem value={\"AI\"}>Aritificial Intelligence</MenuItem>\r\n            <MenuItem value={\"IOT\"}>IOT</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"task_dependency\"\r\n          label=\"Task dependency\"\r\n          type=\"number\"\r\n          fullWidth\r\n          value={dependency}\r\n          inputProps={{ min: \"0\", max: \"100\", step: \"1\" }}\r\n          onChange={e => setDependency(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"task_progress\"\r\n          label=\"Task progress\"\r\n          type=\"number\"\r\n          fullWidth\r\n          inputProps={{ min: \"0\", max: \"100\", step: \"1\" }}\r\n          value={progress}\r\n          onChange={e => setProgress(e.target.value)}\r\n        />\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={endStatus}\r\n            onChange={handleSetStatus}\r\n          >\r\n            <MenuItem value={\"Ongoing\"}>Ongoing</MenuItem>\r\n            <MenuItem value={\"In progress\"}>In progress</MenuItem>\r\n            <MenuItem value={\"Completed\"}>Completed</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"knowledge_gained\"\r\n          label=\"Knowledge Gained\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={knowledegeGained}\r\n          onChange={e => setKnowledge(e.target.value)}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"skills_gained\"\r\n          label=\"New skill gained\"\r\n          type=\"text\"\r\n          fullWidth\r\n          value={newskill}\r\n          onChange={e => setNewskill(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            const task = [{ user_id, task_description, dependency, category }];\r\n            const report = {\r\n              user_id: task,\r\n              activityid: activityId,\r\n              milestone: \"\",\r\n              suid: user_id\r\n            };\r\n            const progressInfo = {\r\n              userId: user_id,\r\n              endStatus,\r\n              progress,\r\n              knowledegeGained,\r\n              newSkills: newskill\r\n            };\r\n            postTask({ report, progressInfo, user_id });\r\n            handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit activity\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //\r\n    display: \"flex\"\r\n  },\r\n  spaceDown1: {\r\n    marginBottom: 16\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar, //\r\n  content: {\r\n    //\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    //\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  fixedWidth: {\r\n    maxWidth: \"70vw\",\r\n    overflow: \"auto\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\n// improvement needed\r\nconst useStyles = makeStyles({\r\n  dispFlex: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  dispFlexStart: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\"\r\n  },\r\n  spaceDown1: {\r\n    marginBottom: 16\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n    margin: 8\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color: \"#2d5dc4\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\nfunction TaskItem({ row, user_id, activity_id }) {\r\n  let deleteTask = useStoreActions(action => action.activity.DELETE_TASK_START);\r\n  const classes = useStyles();\r\n  function iWasAssigned(task, user_id) {\r\n    return task.user_id === user_id;\r\n  }\r\n  function iAmSupervisor(task, user_id) {\r\n    return task.assigned_by === user_id;\r\n  }\r\n  return (\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className={classes.dispFlex}>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {new Date(row.date).toLocaleDateString()}\r\n            </Typography>\r\n\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {\"Progress \" + (row.progress || \"NA\")}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n            className={classes.spaceDown1}\r\n          >\r\n            {row.task_description}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\">\r\n            Assigned to : {row.fname + \" \" + row.lname}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"p\"\r\n            className={classes.spaceDown1}\r\n          >\r\n            Status : {row.status_eod || \"Not entered\"}\r\n            <br />\r\n            Knowledge gained : {row.knowledge_gained || \"Not entered\"}\r\n          </Typography>\r\n          <div className={classes.dispFlexStart}>\r\n            {iWasAssigned(row, user_id) ? (\r\n              <Button\r\n                onClick={e => {\r\n                  deleteTask({\r\n                    report_id: row.reportid,\r\n                    date: row.date,\r\n                    activity_id: activity_id\r\n                  });\r\n                }}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\n\r\nimport Title from \"../../../UI/Title\";\r\nimport TaskItem from \"./TaskItem/TaskItem\";\r\nimport { useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport LoadingContainer from \"../../../UI/LoadingContainer\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction TaskList({ activityId, tasks, user_id }) {\r\n  let isTasksLoading = useStoreState(state => state.activity.isFetching);\r\n  let fetchTasks = useStoreActions(action => action.activity.FETCH_TASKS_START);\r\n  let clearTasks = useStoreActions(action => action.activity.CLEAR_TASKS);\r\n\r\n  useEffect(() => {\r\n    if (isTasksLoading) fetchTasks({ activityId });\r\n    return () => clearTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <Title>Associated tasks</Title>\r\n      </Grid>\r\n      <LoadingContainer isLoading={isTasksLoading}>\r\n        {tasks.length ? (\r\n          tasks.map(row => (\r\n            <TaskItem\r\n              activity_id={activityId}\r\n              user_id={user_id}\r\n              row={row}\r\n              key={row}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No tasks available under this activity</p>\r\n        )}\r\n      </LoadingContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nfunction FilterByName({ tasks, getAllUtil, filterByNames, setName, classes }) {\r\n  return (\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <Autocomplete\r\n        className={classes.spaceDown1}\r\n        multiple\r\n        id=\"name-filter\"\r\n        options={getAllUtil(tasks, \"name\")}\r\n        getOptionLabel={option => option.name}\r\n        filterSelectedOptions\r\n        onChange={(event, values) => {\r\n          console.log(values);\r\n          setName(values.map(value => value.name));\r\n          filterByNames(\r\n            tasks,\r\n            values.map(value => value.name),\r\n            true\r\n          );\r\n        }}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"Search by name\"\r\n            placeholder=\"Enter the member's name\"\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nfunction FilterByDate({ setDate, filterByDate, tasks, classes }) {\r\n  return (\r\n    <Grid item xs={12} md={6} lg={3}>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"Search by date\"\r\n        type=\"date\"\r\n        onChange={event => {\r\n          setDate(new Date(event.currentTarget.value));\r\n          filterByDate(tasks, event.currentTarget.value, true);\r\n        }}\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FilterByDate;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName/FilterByName\";\r\nimport FilterByDate from \"./FilterByDate/FilterByDate\";\r\n\r\nfunction TaskFilterActions({\r\n  tasks,\r\n  getAllUtil,\r\n  filterByNames,\r\n  classes,\r\n  setName,\r\n  setDate,\r\n  filterByDate\r\n}) {\r\n  return (\r\n    <>\r\n      <FilterByName\r\n        tasks={tasks}\r\n        setName={setName}\r\n        getAllUtil={getAllUtil}\r\n        filterByNames={filterByNames}\r\n        classes={classes}\r\n      />\r\n      <FilterByDate\r\n        setDate={setDate}\r\n        tasks={tasks}\r\n        filterByDate={filterByDate}\r\n        classes={classes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskFilterActions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddTask from \"./AddTask/AddTask\";\r\nimport useStyles from \"./activityStyles\";\r\nimport Copyright from \"../../UI/Copyrights\";\r\nimport { useParams } from \"react-router\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport TaskList from \"./TaskList/TaskList\";\r\nimport TaskFilterActions from \"./TaskList/TaskFilterActions/TaskFilterActions\";\r\n\r\nconst Activity = () => {\r\n  const classes = useStyles();\r\n  const { activityid } = useParams();\r\n  const { type, user_id } = useStoreState(state => state.profileMod.profile);\r\n  const [tasksBuffer, setTasksBuffer] = useState([]);\r\n  const { tasks, isFetching: isTasksLoading } = useStoreState(\r\n    state => state.activity\r\n  );\r\n  const alter_user_id = useStoreState(state => state.authMod.user_id);\r\n  const [name, setName] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isTasksLoading) {\r\n      setTasksBuffer(tasks);\r\n    }\r\n  }, [isTasksLoading]);\r\n\r\n  const handleModalOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  function filterByNames(tasks, names, isTransaction) {\r\n    // side effect!! be careful in these cases\r\n    let updatedTasks = names.length\r\n      ? tasks.filter(task =>\r\n          names.some(name => task.fname + \" \" + task.lname === name)\r\n        )\r\n      : tasks;\r\n    setTasksBuffer(updatedTasks);\r\n    if (isTransaction) filterByNames(updatedTasks, date, false);\r\n  }\r\n\r\n  function isTodaysTaskUpdated(tasks, user_id) {\r\n    return tasks.some(task => {\r\n      console.log(\r\n        new Date(task.date).toLocaleDateString(),\r\n        new Date().toLocaleDateString()\r\n      );\r\n      return (\r\n        new Date(task.date).toLocaleDateString() ===\r\n          new Date().toLocaleDateString() && user_id === task.user_id\r\n      );\r\n    });\r\n  }\r\n\r\n  function getAllUtil(tasks, field) {\r\n    let uniqueTasks = [];\r\n    tasks = tasks.map(task => ({\r\n      name: task.fname + \" \" + task.lname\r\n    }));\r\n    tasks.forEach(task => {\r\n      if (!uniqueTasks.some(uniqueTask => uniqueTask[field] === task[field])) {\r\n        uniqueTasks.push({ [field]: task[field] });\r\n      }\r\n    });\r\n\r\n    return uniqueTasks;\r\n  }\r\n\r\n  function filterByDate(tasks, date, isTransaction) {\r\n    // side effect!! be careful in these cases\r\n    let updatedTasks = date.length\r\n      ? tasks.filter(\r\n          task =>\r\n            new Date(task.date).toLocaleDateString() ===\r\n            new Date(date).toLocaleDateString()\r\n        )\r\n      : tasks;\r\n    setTasksBuffer(updatedTasks);\r\n    if (isTransaction) filterByNames(updatedTasks, name, false);\r\n  }\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container className={classes.container}>\r\n        <Grid container>\r\n          <Grid container item xs={12} spacing={2}>\r\n            <Grid item xs={12}>\r\n              {!isTodaysTaskUpdated(tasks, user_id || alter_user_id) &&\r\n              type !== \"A\" ? (\r\n                <Button\r\n                  href=\"#text-buttons\"\r\n                  color=\"primary\"\r\n                  onClick={handleModalOpen}\r\n                  className={classes.spaceDown1}\r\n                >\r\n                  Add new task\r\n                </Button>\r\n              ) : null}\r\n            </Grid>\r\n            {!isTasksLoading ? (\r\n              <TaskFilterActions\r\n                tasks={tasks}\r\n                getAllUtil={getAllUtil}\r\n                filterByNames={filterByNames}\r\n                classes={classes}\r\n                setName={setName}\r\n                setDate={setDate}\r\n                tasks={tasks}\r\n                filterByDate={filterByDate}\r\n              />\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <AddTask\r\n            open={openModal}\r\n            user_id={user_id || alter_user_id}\r\n            activityId={activityid}\r\n            handleClose={handleModalClose}\r\n          />\r\n          <TaskList\r\n            activityId={activityid}\r\n            tasks={tasksBuffer}\r\n            user_id={user_id}\r\n          />\r\n          <Grid item xs={7} md={10} lg={12}>\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Paper, FormControl, TextField } from \"@material-ui/core\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  fixedWidth: {\r\n    maxWidth: \"70vw\",\r\n    overflow: \"auto\"\r\n  },\r\n  paperStyling: {\r\n    padding: 20\r\n  },\r\n  formElementWidth: {\r\n    width: 250\r\n  },\r\n  formFullWidth: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\n// don't worry about the size, it's just number of form fields\r\nconst SettingsDemo = () => {\r\n  let prevEmail = useStoreState(state => state.profileMod.profile.email);\r\n  let prevFname = useStoreState(state => state.profileMod.profile.fname);\r\n  let prevLname = useStoreState(state => state.profileMod.profile.lname);\r\n  let prevSex = useStoreState(state => state.profileMod.profile.sex);\r\n  let prevSem = useStoreState(state => state.profileMod.profile.sem);\r\n  let prevDob = useStoreState(state => state.profileMod.profile.dob);\r\n  let prevPhone = useStoreState(state => state.profileMod.profile.phone);\r\n  let prevAddress1 = useStoreState(\r\n    state => state.profileMod.profile.address_line1\r\n  );\r\n  let prevAddress2 = useStoreState(\r\n    state => state.profileMod.profile.address_line2\r\n  );\r\n  let prevCity = useStoreState(state => state.profileMod.profile.city);\r\n  let prevDist = useStoreState(state => state.profileMod.profile.dist);\r\n  let prevState = useStoreState(state => state.profileMod.profile.state);\r\n  let prevPin = useStoreState(state => state.profileMod.profile.pin);\r\n  let prevaboutme = useStoreState(state => state.profileMod.profile.aboutme);\r\n  let prevbranch = useStoreState(state => state.profileMod.profile.branch);\r\n\r\n  let updateProfile = useStoreActions(\r\n    action => action.profileMod.POST_PROFILE_START\r\n  );\r\n\r\n  let [sex, setSex] = useState(prevSex || \"Male\");\r\n  let [sem, setSem] = useState(\"\" + prevSem || \"First1\");\r\n  let [branch, setbranch] = useState(prevbranch || \"Computer Science\");\r\n  let [fname, setFname] = useState(prevFname || \"\");\r\n  let [lname, setLname] = useState(prevLname || \"\");\r\n  let [dob, setDob] = useState(new Date(prevDob) || new Date(\"2000-01-01\"));\r\n  let [email, setEmail] = useState(prevEmail || \"\");\r\n  let [phone, setPhone] = useState(prevPhone || \"\");\r\n  let [address_line1, setaddress_line1] = useState(prevAddress1 || \"\");\r\n  let [address_line2, setaddress_line2] = useState(prevAddress2 || \"\");\r\n  let [city, setCity] = useState(prevCity || \"\");\r\n  let [dist, setDist] = useState(prevDist || \"\");\r\n  let [state, setSt] = useState(prevState || \"\");\r\n  let [pin, setPin] = useState(prevPin || \"\");\r\n  let [aboutme, setaboutme] = useState(prevaboutme || \"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Paper className={classes.paperStyling}>\r\n          <form>\r\n            <Grid container spacing={3}>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    className={classes.formElementWidth}\r\n                    label=\"Enter your name\"\r\n                    id=\"profile-name\"\r\n                    value={fname}\r\n                    onChange={e => {\r\n                      setFname(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    className={classes.formElementWidth}\r\n                    label=\"Enter your last name\"\r\n                    id=\"profile-name\"\r\n                    value={lname}\r\n                    onChange={e => {\r\n                      setLname(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    className={classes.formElementWidth}\r\n                    label=\"Enter your email\"\r\n                    id=\"profile-email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={e => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} lg={3}>\r\n                <FormControl>\r\n                  <label>Date of birth</label>\r\n                  <TextField\r\n                    id=\"profile-date\"\r\n                    value={dob}\r\n                    type=\"date\"\r\n                    onChange={e => {\r\n                      setDob(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6} lg={3}>\r\n                <FormControl>\r\n                  <Autocomplete\r\n                    className={classes.formElementWidth}\r\n                    id=\"profile-sex\"\r\n                    defaultValue={sex}\r\n                    options={[\"Male\", \"Female\", \"Other\"]}\r\n                    filterSelectedOptions\r\n                    onChange={event => {\r\n                      setSex(event.target.value);\r\n                    }}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Enter the gender\"\r\n                        placeholder=\"Enter the gender\"\r\n                        fullWidth\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl>\r\n                  <Autocomplete\r\n                    className={classes.formElementWidth}\r\n                    id=\"profile-branch\"\r\n                    defaultValue={branch}\r\n                    options={[\r\n                      \"Computer science\",\r\n                      \"Mechanical\",\r\n                      \"Civil\",\r\n                      \"Electrical and Electronics\",\r\n                      \"Electronics and Communications\"\r\n                    ]}\r\n                    filterSelectedOptions\r\n                    onChange={event => {\r\n                      console.log(event.target.lastChild.textContent);\r\n                      setbranch(event.target.lastChild.textContent);\r\n                    }}\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Enter the branch\"\r\n                        placeholder=\"Enter the branch\"\r\n                        fullWidth\r\n                      />\r\n                    )}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl>\r\n                  <TextField\r\n                    label=\"Enter your semester\"\r\n                    InputProps={{ inputProps: { min: 1, max: 8 } }}\r\n                    id=\"profile-sem\"\r\n                    value={sem}\r\n                    type=\"number\"\r\n                    onChange={e => {\r\n                      setSem(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    label=\"Enter your phone\"\r\n                    id=\"profile-phone\"\r\n                    value={phone}\r\n                    type=\"phone\"\r\n                    onChange={e => {\r\n                      setPhone(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    label=\"Address line 1\"\r\n                    id=\"profile-address-1\"\r\n                    value={address_line1}\r\n                    onChange={e => {\r\n                      setaddress_line1(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <FormControl fullWidth={true}>\r\n                  <TextField\r\n                    label=\"Address line 2\"\r\n                    id=\"profile-address-2\"\r\n                    value={address_line2}\r\n                    onChange={e => {\r\n                      setaddress_line2(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl>\r\n                  <TextField\r\n                    label=\"Enter your city\"\r\n                    id=\"profile-city\"\r\n                    value={city}\r\n                    onChange={e => {\r\n                      setCity(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl>\r\n                  <TextField\r\n                    label=\"Enter your district\"\r\n                    id=\"profile-dist\"\r\n                    value={dist}\r\n                    onChange={e => {\r\n                      setDist(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl>\r\n                  <TextField\r\n                    label=\"Enter your state\"\r\n                    id=\"profile-state\"\r\n                    value={state}\r\n                    onChange={e => {\r\n                      setSt(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} lg={3}>\r\n                <FormControl>\r\n                  <TextField\r\n                    label=\"Enter your pin\"\r\n                    id=\"profile-pin\"\r\n                    value={pin}\r\n                    onChange={e => {\r\n                      setPin(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={12}>\r\n                <FormControl>\r\n                  <TextField\r\n                    multiline\r\n                    label=\"About me\"\r\n                    id=\"profile-about\"\r\n                    value={aboutme}\r\n                    onChange={e => {\r\n                      setaboutme(e.target.value);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={2}>\r\n                <Button\r\n                  href=\"#text-buttons\"\r\n                  color=\"primary\"\r\n                  onClick={e => {\r\n                    updateProfile({\r\n                      sex,\r\n                      branch,\r\n                      fname,\r\n                      lname,\r\n                      sem,\r\n                      dob,\r\n                      email,\r\n                      phone,\r\n                      address_line1,\r\n                      address_line2,\r\n                      city,\r\n                      dist,\r\n                      state,\r\n                      pin,\r\n                      aboutme\r\n                    });\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SettingsDemo;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AddQualification = ({ open, handleClose }) => {\r\n  const [qualification, setQualification] = React.useState(\"\");\r\n  const [college, setCollege] = React.useState(\"\");\r\n  const [grade, setGrade] = React.useState(0);\r\n  const [board, setBoard] = React.useState(\"\");\r\n  const postQualification = useStoreActions(\r\n    action => action.profileMod.POST_QUALIFICATION_START\r\n  );\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add a new qualification</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={qualification}\r\n          onChange={e => setQualification(e.target.value)}\r\n          id=\"qualification\"\r\n          label=\"Qualification\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={grade}\r\n          onChange={e => {\r\n            console.log(isNaN(e.target.value));\r\n            if (!isNaN(e.target.value) && 0 >= e.target.value <= 10)\r\n              setGrade(e.target.value);\r\n          }}\r\n          id=\"qualification_grade\"\r\n          label=\"Grade\"\r\n          type=\"number\"\r\n          inputProps={{ max: 10, min: 0 }}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={college}\r\n          onChange={e => setCollege(e.target.value)}\r\n          id=\"qualification_college\"\r\n          label=\"College\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={board}\r\n          onChange={e => setBoard(e.target.value)}\r\n          id=\"qualification_board\"\r\n          label=\"Board\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => {\r\n            console.log({\r\n              board,\r\n              college,\r\n              qualification,\r\n              grade\r\n            });\r\n            postQualification({\r\n              board,\r\n              college,\r\n              qualification,\r\n              grade\r\n            });\r\n            handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit activity\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddQualification;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AddSkills = ({ open, handleClose }) => {\r\n  const [skills, setSkills] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const postSkills = useStoreActions(\r\n    action => action.profileMod.POST_SKILLS_START\r\n  );\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Add a new skill</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Please enter the below detail.</DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={skills}\r\n          onChange={e => setSkills(e.target.value)}\r\n          id=\"skills\"\r\n          label=\"Skill\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          value={title}\r\n          onChange={e => {\r\n            setTitle(e.target.value);\r\n          }}\r\n          id=\"skills_title\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={e => {\r\n            postSkills({\r\n              skills,\r\n              title\r\n            });\r\n            handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Submit activity\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddSkills;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport LoadingContainer from \"../../../UI/LoadingContainer\";\r\nimport AddQualification from \"./AddQualification\";\r\nimport AddSkills from \"./AddSkills\";\r\n// import useStyles from \"./myInfoStyles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  fixedWidth: {\r\n    maxWidth: \"70vw\",\r\n    overflow: \"auto\"\r\n  },\r\n  paperStyling: {\r\n    padding: 20\r\n  },\r\n  formElementWidth: {\r\n    width: 250\r\n  },\r\n  formFullWidth: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nconst MyInfo = () => {\r\n  let [openQualificationModal, setOpenQualificationModal] = useState(false);\r\n  let [openSkillsModal, setOpenSkillsModal] = useState(false);\r\n  let {\r\n    fname,\r\n    lname,\r\n    city,\r\n    email,\r\n    address_line1,\r\n    address_line2,\r\n    dist,\r\n    state,\r\n    branch,\r\n    aboutme,\r\n    phone,\r\n    pin,\r\n    skills,\r\n    qualification\r\n  } = useStoreState(state => state.profileMod.profile);\r\n\r\n  let getprofile = useStoreActions(\r\n    action => action.profileMod.FETCH_PROFILE_START\r\n  );\r\n  let isProfileFetching = useStoreState(state => state.profileMod.isFetching);\r\n\r\n  function handleQualificationOpen() {\r\n    setOpenQualificationModal(true);\r\n  }\r\n\r\n  function handleQualificationClose() {\r\n    setOpenQualificationModal(false);\r\n  }\r\n\r\n  function handleSkillsOpen() {\r\n    setOpenSkillsModal(true);\r\n  }\r\n\r\n  function handleSkillsClose() {\r\n    setOpenSkillsModal(false);\r\n  }\r\n\r\n  let classes = useStyles();\r\n  useEffect(() => {\r\n    if (isProfileFetching) getprofile();\r\n  }, [isProfileFetching]);\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <LoadingContainer isLoading={isProfileFetching}>\r\n          <Paper className={classes.paperStyling}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} lg={6}>\r\n                <h2>{fname + \" \" + lname}</h2>\r\n                <br />\r\n                <h3>Address</h3>\r\n                <p>{address_line1}</p>\r\n                <p>{address_line2}</p>\r\n                <p>\r\n                  {city}, {dist}, {state}\r\n                </p>\r\n                <p>{pin}</p>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <br />\r\n                <h3>Contact info</h3>\r\n                <p>Phone : {phone}</p>\r\n                <p>Email : {email}</p>\r\n              </Grid>\r\n              <Grid item lg={12}>\r\n                <h3>About me</h3>\r\n                <p>{aboutme}</p>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <h3>\r\n                  Educational qualifications{\" \"}\r\n                  <AddCircle\r\n                    style={{ fontSize: 16, cursor: \"pointer\" }}\r\n                    onClick={event => {\r\n                      handleQualificationOpen();\r\n                    }}\r\n                  />\r\n                  <AddQualification\r\n                    handleClose={handleQualificationClose}\r\n                    open={openQualificationModal}\r\n                  />\r\n                </h3>\r\n                {qualification && qualification.length ? (\r\n                  qualification.map(\r\n                    ({ qualification, college, grade, board }) => (\r\n                      <div key={qualification}>\r\n                        <br />\r\n                        <h3>{qualification}</h3>\r\n                        <p>{college}</p>\r\n                        <p>{grade}</p>\r\n                        <p>{board}</p>\r\n                      </div>\r\n                    )\r\n                  )\r\n                ) : (\r\n                  <p>Not available</p>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <h3>\r\n                  Skillset{\" \"}\r\n                  <AddCircle\r\n                    style={{ fontSize: 16, cursor: \"pointer\" }}\r\n                    onClick={event => {\r\n                      handleSkillsOpen();\r\n                    }}\r\n                  />\r\n                  <AddSkills\r\n                    open={openSkillsModal}\r\n                    handleClose={handleSkillsClose}\r\n                  />\r\n                </h3>\r\n                {skills && skills.length ? (\r\n                  skills.map(({ skills, title }) => (\r\n                    <div key={skills}>\r\n                      <br />\r\n                      <h3>{skills}</h3>\r\n                      <p>{title}</p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>Not available</p>\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={12}>\r\n                <div style={{ width: \"65vw\" }}></div>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </LoadingContainer>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MyInfo;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100vw\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useEffect } from \"react\";\r\nimport DrawableNav from \"../DrawableNav/DrawableNav\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nimport TopNav from \"../TopNav/TopNav\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport Activity from \"../Activity/Activity\";\r\nimport SettingsDemo from \"../Profile/Settings/Settings\";\r\nimport MyInfo from \"../Profile/MyInfo/MyInfo\";\r\nimport useStyles from \"./mainStyles\";\r\n\r\nconst ProtectedMainSection = () => {\r\n  let isCalenderLoading = useStoreState(state => state.attendence.isFetching);\r\n  let fetchAttendance = useStoreActions(\r\n    action => action.attendence.FETCH_ATTENDENCE_START\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isCalenderLoading) fetchAttendance();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <TopNav open={open} handleDrawerOpen={handleDrawerOpen} />\r\n      <DrawableNav handleDrawerClose={handleDrawerClose} open={open} />\r\n      <Switch>\r\n        <Route path=\"/main/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/main/activity/:activityid\">\r\n          <Activity />\r\n        </Route>\r\n        <Route path=\"/main/settings\">\r\n          <SettingsDemo />\r\n        </Route>\r\n        <Route path=\"/main/profile\">\r\n          <MyInfo />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtectedMainSection;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport ProtectedMainSection from \"./ProtectedMainSection/ProtectedMainSection\";\r\n\r\nfunction Main() {\r\n  let setAuth = useStoreActions(action => action.authMod.SET_REGULAR_AUTH);\r\n  let clearProfile = useStoreActions(action => action.profileMod.CLEAR_PROFILE);\r\n\r\n  // clears the token, sets the auth boolean to false and clears the profile\r\n\r\n  function logoutTransaction() {\r\n    localStorage.clear();\r\n    setAuth(false);\r\n    clearProfile();\r\n    return <Redirect to=\"/register\" />;\r\n  }\r\n\r\n  function ProtectedRoute({ component: Component, ...rest }) {\r\n    let isAuth = useStoreState(state => state.authMod.isAuth);\r\n    if (isAuth) {\r\n      return <Route {...rest} component={Component} />;\r\n    } else {\r\n      return <Redirect to=\"/register\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section id=\"dashboard\" className=\"disp-flex\">\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Auth} />\r\n        <Route path=\"/logout\" render={() => logoutTransaction()} />\r\n        <ProtectedRoute path=\"/main\" component={ProtectedMainSection} />\r\n      </BrowserRouter>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  isFetching: true,\r\n  isInserting: false,\r\n  isSkillsInserting: false,\r\n  isQualificationInserting: false,\r\n  profile: {},\r\n  CLEAR_PROFILE: action((state, payload) => {\r\n    state[\"profile\"] = {};\r\n  }),\r\n  errors: [],\r\n  FETCH_PROFILE_REQUEST: action((state, payload) => {\r\n    state[\"isFetching\"] = payload;\r\n  }),\r\n  FETCH_PROFILE_SUCCESS: action((state, payload) => {\r\n    state[\"profile\"] = payload;\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  FETCH_PROFILE_FAIL: action((state, payload) => {\r\n    state[\"isFetching\"] = false;\r\n    state[\"errors\"] = payload;\r\n  }),\r\n  FETCH_PROFILE_START: thunk(async (action, payload) => {\r\n    action.FETCH_PROFILE_REQUEST(true);\r\n    try {\r\n      let profile = await axios.get(\"/profile\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (profile) {\r\n        action.FETCH_PROFILE_SUCCESS(profile.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      localStorage.clear();\r\n      action.FETCH_PROFILE_FAIL({ message: \"Uxpected error\" });\r\n    }\r\n  }),\r\n  POST_PROFILE_REQUEST: action((state, payload) => {\r\n    state[\"isInserting\"] = true;\r\n  }),\r\n  POST_PROFILE_SUCCESS: action((state, payload) => {\r\n    state[\"isInserting\"] = false;\r\n    state[\"isFetching\"] = true;\r\n  }),\r\n  POST_PROFILE_FAIL: action((state, payload) => {\r\n    state[\"errors\"] = payload;\r\n    state[\"isInserting\"] = false;\r\n  }),\r\n  POST_PROFILE_START: thunk(async (action, payload) => {\r\n    action.POST_PROFILE_REQUEST();\r\n    try {\r\n      let profile = await axios.post(\"/profile\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (profile) {\r\n        action.POST_PROFILE_SUCCESS();\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.POST_PROFILE_FAIL({ message: \"Uxpected error\" });\r\n    }\r\n  }),\r\n  POST_SKILLS_REQUEST: action((state, payload) => {\r\n    state[\"isSkillsInserting\"] = true;\r\n  }),\r\n  POST_SKILLS_SUCCESS: action((state, payload) => {\r\n    state[\"isSkillsInserting\"] = false;\r\n    state[\"profile\"].skills = payload;\r\n  }),\r\n  POST_SKILLS_FAIL: action((state, payload) => {\r\n    state[\"errors\"] = payload;\r\n    state[\"isSkillsInserting\"] = false;\r\n  }),\r\n\r\n  POST_SKILLS_START: thunk(async (action, payload) => {\r\n    action.POST_SKILLS_REQUEST();\r\n    try {\r\n      let skills = await axios.post(\"/profile/skills\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (skills) {\r\n        action.FETCH_PROFILE_START();\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      action.POST_SKILLS_FAIL({ message: \"Uxpected error\" });\r\n    }\r\n  }),\r\n  POST_QUALIFICATION_REQUEST: action((state, payload) => {\r\n    state[\"isQualificationInserting\"] = true;\r\n  }),\r\n  POST_QUALIFICATION_SUCCESS: action((state, payload) => {\r\n    state[\"isQualificationInserting\"] = false;\r\n    state[\"profile\"].qualification = payload;\r\n  }),\r\n  POST_QUALIFICATION_FAIL: action((state, payload) => {\r\n    state[\"errors\"] = payload;\r\n    state[\"isQualificationInserting\"] = false;\r\n  }),\r\n  POST_QUALIFICATION_START: thunk(async (action, payload) => {\r\n    action.POST_QUALIFICATION_REQUEST();\r\n    try {\r\n      let qualification = await axios.post(\"/profile/qualification\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (qualification) {\r\n        action.FETCH_PROFILE_START();\r\n        // action.POST_QUALIFICATION_SUCCESS(qualification.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      action.POST_QUALIFICATION_FAIL({ message: \"Uxpected error\" });\r\n    }\r\n  })\r\n};\r\n","import { action, thunk } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  isAuth: false,\r\n  isChecking: true,\r\n  isAdminAuthAttempt: true,\r\n  token: \"\",\r\n  user_id: \"\",\r\n  type: \"\",\r\n  errors: [],\r\n  CLEAR_ERRORS: action((state, payload) => {\r\n    state[\"errors\"] = [];\r\n  }),\r\n  users: [],\r\n  SET_REGULAR_AUTH: action((state, payload) => {\r\n    state[\"isAuth\"] = payload;\r\n  }),\r\n  FETCH_LOGIN_REQUEST: action((state, payload) => {\r\n    state[\"isChecking\"] = payload;\r\n  }),\r\n  FETCH_LOGIN_SUCCESS: action((state, { token, user_id, type }) => {\r\n    state[\"token\"] = token;\r\n    state[\"user_id\"] = user_id;\r\n    state[\"type\"] = type;\r\n    state[\"isAuth\"] = true;\r\n  }),\r\n  FETCH_LOGIN_FAIL: action((state, payload) => {\r\n    state[\"isAuth\"] = false;\r\n    state[\"errors\"] = payload;\r\n  }),\r\n  FETCH_LOGIN_START: thunk(async (action, payload) => {\r\n    action.FETCH_LOGIN_REQUEST(true);\r\n    try {\r\n      let authData = await axios.post(\"/login\", payload);\r\n      if (authData) {\r\n        let {\r\n          data: { token, user_id, type }\r\n        } = authData;\r\n        localStorage.setItem(\"token\", token);\r\n        action.FETCH_LOGIN_SUCCESS({ token, user_id, type });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.FETCH_LOGIN_FAIL(error.response.data);\r\n    }\r\n  }),\r\n  FETCH_REGISTER_REQUEST: action((state, payload) => {\r\n    state[\"isChecking\"] = payload;\r\n  }),\r\n  FETCH_REGISTER_SUCCESS: action((state, { token, user_id, type }) => {\r\n    state[\"token\"] = token;\r\n    state[\"user_id\"] = user_id;\r\n    state[\"type\"] = type;\r\n    state[\"isAuth\"] = true;\r\n  }),\r\n  FETCH_REGISTER_FAIL: action((state, payload) => {\r\n    state[\"isAuth\"] = false;\r\n    state[\"errors\"] = payload;\r\n  }),\r\n  FETCH_REGISTER_START: thunk(async (action, payload) => {\r\n    action.FETCH_REGISTER_REQUEST(true);\r\n    try {\r\n      let authData = await axios.post(\"/signup\", payload);\r\n      if (authData) {\r\n        let {\r\n          data: { token, user_id, type }\r\n        } = authData;\r\n        localStorage.setItem(\"token\", token);\r\n        action.FETCH_REGISTER_SUCCESS({ token, user_id, type });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.FETCH_REGISTER_FAIL(error.response.data);\r\n    }\r\n  }),\r\n  FETCH_ALL_USERS_START: action((state, paylaod) => {\r\n    state[\"isAdminAuthAttempt\"] = true;\r\n  }),\r\n  FETCH_ALL_USERS_SUCCESS: action((state, { token, user_id, type, users }) => {\r\n    state[\"token\"] = token;\r\n    state[\"user_id\"] = user_id;\r\n    state[\"type\"] = type;\r\n    state[\"users\"] = users;\r\n    state[\"isAuth\"] = true;\r\n  }),\r\n  FETCH_ALL_USERS_FAIL: action((state, paylaod) => {\r\n    state[\"isAdminAuthAttempt\"] = false;\r\n  }),\r\n  FETCH_ALL_USERS: thunk(async (action, payload) => {\r\n    action.FETCH_ALL_USERS_START();\r\n    try {\r\n      let users = await axios.get(\"/admin/all\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      action.FETCH_ALL_USERS_SUCCESS(users.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      action.FETCH_ALL_USERS_FAIL();\r\n    }\r\n  })\r\n};\r\n","import axios from \"axios\";\r\n\r\nlet axiosMod = axios.create({\r\n  baseURL: \"https://athrv-ed-portal.herokuapp.com/\"\r\n});\r\n\r\nexport default axiosMod;\r\n","import profileMod from \"./profileMod\";\r\nimport authMod from \"./authMod\";\r\nimport admin from \"./admin\";\r\nimport attendence from \"./attendence\";\r\nimport activities from \"./activities\";\r\nimport activity from \"./activity\";\r\n\r\nexport default {\r\n  profileMod,\r\n  admin,\r\n  authMod,\r\n  attendence,\r\n  activities,\r\n  activity\r\n};\r\n","import { thunk, action } from \"easy-peasy\";\r\nimport axios from \"./axios.proxy\";\r\nexport default {\r\n  activities: [],\r\n  isTaskLoading: true,\r\n  domains: [\r\n    \"IOT\",\r\n    \"Artificial Intelligence\",\r\n    \"android development\",\r\n    \"web development\"\r\n  ],\r\n  userTasks: [],\r\n  setUserTasks: action((state, payload) => {\r\n    state[\"userTasks\"] = payload;\r\n  }),\r\n  isUserTasksLoading: true,\r\n  setUserTasksLoading: action((state, payload) => {\r\n    state[\"isUserTasksLoading\"] = payload;\r\n  }),\r\n  setDomains: action((state, payload) => {\r\n    state[\"domains\"] = payload.map(domain => domain.title);\r\n  }),\r\n  setTaskLoading: action((state, payload) => {\r\n    state[\"isTaskLoading\"] = payload;\r\n  }),\r\n  setActivityTask: action((state, payload) => {\r\n    state[\"activities\"] = state[\"activities\"].map(activity => {\r\n      console.log(payload.activityid, activity.activityid);\r\n      if (activity.activityid === payload.activityid) {\r\n        activity.tasks = payload.tasks;\r\n        console.log(activity.tasks);\r\n      }\r\n      return activity;\r\n    });\r\n    state[\"isTaskLoading\"] = false;\r\n  }),\r\n  isLoading: true,\r\n  setLoading: action((state, payload) => {\r\n    state[\"isLoading\"] = payload;\r\n  }),\r\n  setActivities: action((state, payload) => {\r\n    state[\"activities\"] = [...payload];\r\n  }),\r\n  isAdmin: false,\r\n  fetchAllUserTasks: thunk(async (action, payload) => {\r\n    console.log(\"Here bro\");\r\n    try {\r\n      action.setUserTasksLoading(true);\r\n      let { activityId, userId } = payload;\r\n      let activities = await axios.get(\r\n        `/reports/activity/${activityId}/user/${userId}`,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n\r\n      action.setUserTasks(activities.data);\r\n      action.setUserTasksLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      action.setLoading(false);\r\n    }\r\n  }),\r\n  submitActivityTeam: thunk(async (action, payload) => {\r\n    try {\r\n      axios\r\n        .post(\"/admin/activity\", payload, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        })\r\n        .then(data => {\r\n          action.fetchActivities(\"A\");\r\n        });\r\n    } catch (err) {}\r\n  }),\r\n  fetchActivities: thunk(async (action, payload) => {\r\n    try {\r\n      action.setLoading(true);\r\n      if (payload === \"A\") {\r\n        let activities = await axios.get(\"/admin/activity/incomplete\", {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        });\r\n\r\n        action.setLoading(false);\r\n        action.setActivities(activities.data.incompleteActivity);\r\n      } else {\r\n        let activities = await axios.get(\"/reports/activity/\", {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        });\r\n\r\n        action.setLoading(false);\r\n        action.setActivities(activities.data);\r\n      }\r\n    } catch (err) {\r\n      action.setLoading(false);\r\n    }\r\n  }),\r\n  fetchDomains: action(async (action, payload) => {\r\n    try {\r\n      let domains = await axios.get(\"/select/?type=domains\");\r\n      action.setDomains(domains.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }),\r\n  setTasks: thunk(async (action, payload) => {\r\n    try {\r\n      await axios.post(\"/reports\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n    }\r\n  }),\r\n  fetchActivityTask: thunk(async (action, payload) => {\r\n    try {\r\n      action.setTaskLoading(true);\r\n      let tasks = await axios.get(`/reports/${payload}`, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      console.log(tasks);\r\n      action.setActivityTask({\r\n        tasks: tasks.data,\r\n        activityid: payload\r\n      });\r\n    } catch (err) {\r\n      action.setTaskLoading(false);\r\n    }\r\n  }),\r\n  updateTask: thunk(async (action, payload) => {\r\n    try {\r\n      await axios.post(`/reports/task`, payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n    } catch (err) {}\r\n  }),\r\n  deleteTask: thunk(async (action, payload) => {\r\n    try {\r\n      await axios.delete(`/reports/task/${payload.reportid}`, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n    } catch (err) {}\r\n  }),\r\n  updateComment: thunk(async (action, payload) => {\r\n    try {\r\n      await axios.post(`/reports/${payload.reportid}/comment`, payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n    } catch (err) {}\r\n  })\r\n};\r\n","import { thunk, action } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  isFetching: true,\r\n  attendence: [],\r\n  errors: [],\r\n  INSERT_ATTENDENCE: action((state, payload) => {\r\n    payload = payload.map(item => {\r\n      let correctDate = new Date(item.date);\r\n      console.log(correctDate.toLocaleDateString());\r\n      item.date = correctDate.toLocaleDateString();\r\n      item.details = [];\r\n      item.total = 3 * 60 * 60;\r\n      return item;\r\n    });\r\n    state[\"attendence\"] = payload;\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  FETCH_ATTENDENCE_REQUEST: action((state, payload) => {\r\n    state[\"isFetching\"] = true;\r\n  }),\r\n  FETCH_ATTENDENCE_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  FETCH_ATTENDENCE_START: thunk(async (action, payload) => {\r\n    try {\r\n      action.FETCH_ATTENDENCE_REQUEST();\r\n\r\n      let attendence = await axios.get(\"/calender/info\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      console.log(attendence);\r\n      action.INSERT_ATTENDENCE(attendence.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      action.FETCH_ATTENDENCE_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  isLeaveEditing: false,\r\n  isLeaveFetching: true,\r\n  leaveNotes: [],\r\n  INSERT_LEAVE_NOTES: action((state, payload) => {\r\n    state[\"isLeaveFetching\"] = false;\r\n    state[\"leaveNotes\"] = payload;\r\n  }),\r\n  POST_LEAVE_NOTE_REQUEST: action((state, payload) => {\r\n    state[\"isLeaveEditing\"] = true;\r\n  }),\r\n  POST_LEAVE_NOTE_ERROR: action((state, payload) => {\r\n    state[\"isLeaveEditing\"] = false;\r\n  }),\r\n  FETCH_LEAVE_NOTES_REQUEST: action((state, payload) => {\r\n    state[\"isLeaveFetching\"] = true;\r\n  }),\r\n  FETCH_LEAVE_NOTES_ERROR: action((state, payload) => {\r\n    state[\"isLeaveFetching\"] = false;\r\n  }),\r\n  FETCH_LEAVE_NOTES_START: thunk(async (action, payload) => {\r\n    action.FETCH_LEAVE_NOTES_REQUEST();\r\n    try {\r\n      let leave = await axios.get(\"/leaves/view\", {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (leave) {\r\n        console.log(leave);\r\n        action.INSERT_LEAVE_NOTES(leave.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.FETCH_LEAVE_NOTES_ERROR({ message: \"Unexpected server error\" });\r\n    }\r\n  }),\r\n  POST_LEAVE_NOTE_START: thunk(async (action, payload) => {\r\n    let { user_id, type } = payload;\r\n    delete payload.type;\r\n    action.POST_LEAVE_NOTE_REQUEST();\r\n    console.log(payload);\r\n    try {\r\n      let leave = await axios.post(\"/leaves/insert\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (leave) {\r\n        console.log(leave);\r\n        action.FETCH_LEAVE_NOTES_START({ user_id, type });\r\n      }\r\n      // setTimeout(() => action.FETCH_LEAVE_NOTES_START({ user_id, type }), 3000);\r\n    } catch (err) {\r\n      console.log(err);\r\n      action.POST_LEAVE_NOTE_ERROR({ message: \"Unexpected server error\" });\r\n    }\r\n  }),\r\n  UPDATE_LEAVE_NOTE_REQUEST: action((state, payload) => {\r\n    state[\"isLeaveEditing\"] = true;\r\n  }),\r\n  UPDATE_LEAVE_NOTE_SUCCESS: action((state, payload) => {\r\n    state[\"isLeaveEditing\"] = false;\r\n    state[\"isLeaveFetching\"] = true;\r\n  }),\r\n  UPDATE_LEAVE_NOTE_FAIL: action((state, payload) => {\r\n    state[\"isLeaveEditing\"] = false;\r\n  }),\r\n  UPDATE_LEAVE_NOTE_START: thunk(async (action, payload) => {\r\n    try {\r\n      action.UPDATE_LEAVE_NOTE_REQUEST();\r\n      let leaveNote = await axios.post(\"/leaves/adminUpdate\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      console.log(leaveNote);\r\n      if (leaveNote) action.FETCH_LEAVE_NOTES_START();\r\n    } catch (error) {\r\n      console.log(error);\r\n      action.POST_LEAVE_NOTE_ERROR({ message: \"Unexpected server error\" });\r\n    }\r\n  }),\r\n  UPLOAD_FILE_REQUEST: action((state, payload) => {\r\n    state[\"isUploading\"] = true;\r\n  }),\r\n\r\n  UPLOAD_FILE_START: thunk(async (action, payload) => {\r\n    action.UPLOAD_FILE_REQUEST();\r\n    try {\r\n      let formData = new FormData();\r\n      formData.append(\"myFile\", payload.file);\r\n      let activity = await axios.post(\"/uploadfile\", formData, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (activity) {\r\n        console.log(activity);\r\n        action.FETCH_ATTENDENCE_START();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      action.POST_LEAVE_NOTE_ERROR({ message: \"Unexpected server\" });\r\n    }\r\n  })\r\n};\r\n","import { thunk, action } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  isInserting: false,\r\n  isFetching: true,\r\n  isEditing: false,\r\n  activities: [],\r\n  errors: [],\r\n  POST_ACTIVITY_REQUEST: action((state, payload) => {\r\n    state[\"isInserting\"] = payload;\r\n  }),\r\n  EDIT_ACTIVITY_REQUEST: action((state, payload) => {\r\n    state[\"isEditing\"] = payload;\r\n  }),\r\n  FETCH_ACTIVITIES_REQUEST: action((state, payload) => {\r\n    state[\"isFetching\"] = true;\r\n  }),\r\n  POST_ACTIVITY_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isInserting\"] = false;\r\n  }),\r\n  EDIT_ACTIVITY_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isEditing\"] = false;\r\n  }),\r\n  FETCH_ACTIVITIES_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  INSERT_ACTIVITIES: action((state, payload) => {\r\n    state[\"activities\"] = payload;\r\n    state[\"isInserting\"] = false;\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  POST_ACTIVITY_START: thunk(async (action, payload) => {\r\n    try {\r\n      action.POST_ACTIVITY_REQUEST(true);\r\n      let activities = await axios.post(\"/admin/activity\", payload, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (activities) {\r\n        console.log(activities);\r\n        action.FETCH_ACTIVITIES_START({ type: \"A\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.POST_ACTIVITY_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  FETCH_ACTIVITIES_START: thunk(async (action, payload) => {\r\n    try {\r\n      let { type } = payload;\r\n      action.FETCH_ACTIVITIES_REQUEST();\r\n      console.log(localStorage.getItem(\"token\"));\r\n      let activities;\r\n      if (type !== \"A\")\r\n        activities = await axios.get(\"/reports/activity/\", {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        });\r\n      else {\r\n        activities = await axios.get(\"/admin/activity/incomplete\", {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        });\r\n        activities.data = activities.data.incompleteActivity;\r\n      }\r\n\r\n      console.log(activities);\r\n      action.INSERT_ACTIVITIES(activities.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      action.FETCH_ACTIVITIES_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  EDIT_ACTIVITY_START: thunk(async (action, payload) => {\r\n    try {\r\n      action.EDIT_ACTIVITY_REQUEST(true);\r\n      let activities = await axios.put(\"/api/activity\", payload, {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"token\") }\r\n      });\r\n      action.INSERT_ACTIVITIES(activities);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.EDIT_ACTIVITY_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  })\r\n};\r\n","import { thunk, action } from \"easy-peasy\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  isInserting: false,\r\n  isFetching: true,\r\n  isEditing: false,\r\n  tasks: [],\r\n  errors: [],\r\n  CLEAR_TASKS: action((state, payload) => {\r\n    state[\"tasks\"] = [];\r\n    state[\"isFetching\"] = true;\r\n  }),\r\n  POST_TASK_REQUEST: action((state, payload) => {\r\n    state[\"isInserting\"] = payload;\r\n  }),\r\n  EDIT_TASK_REQUEST: action((state, payload) => {\r\n    state[\"isEditing\"] = payload;\r\n  }),\r\n  FETCH_TASKS_REQUEST: action((state, payload) => {\r\n    state[\"isFetching\"] = payload;\r\n  }),\r\n  POST_TASK_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isInserting\"] = false;\r\n  }),\r\n  EDIT_TASK_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isEditing\"] = false;\r\n  }),\r\n  FETCH_TASKS_ERROR: action((state, payload) => {\r\n    state[\"errors\"] = [payload];\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  INSERT_TASKS: action((state, payload) => {\r\n    state[\"tasks\"] = payload;\r\n    state[\"isInserting\"] = false;\r\n    state[\"isFetching\"] = false;\r\n  }),\r\n  POST_TASK_START: thunk(async (action, payload) => {\r\n    try {\r\n      let { report, progressInfo, user_id } = payload;\r\n      let { activityid } = report;\r\n      action.POST_TASK_REQUEST(true);\r\n      let task = await axios.post(\"/reports\", report, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      if (task) {\r\n        progressInfo.reportId = task.data.reportid;\r\n        let progress = await axios.post(`/reports/task`, progressInfo, {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        });\r\n        if (progress) action.FETCH_TASKS_START({ activityId: activityid });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.POST_TASK_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  FETCH_TASKS_START: thunk(async (action, payload) => {\r\n    try {\r\n      action.FETCH_TASKS_REQUEST(true);\r\n      let { activityId } = payload;\r\n      console.log(activityId);\r\n      let tasks = await axios.get(`/reports/${activityId}`, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.getItem(\"token\")\r\n        }\r\n      });\r\n      console.log(tasks);\r\n      action.INSERT_TASKS(tasks.data);\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.FETCH_TASKS_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  EDIT_TASK_START: thunk(async (action, payload) => {\r\n    try {\r\n      let { activity_id } = payload;\r\n      action.EDIT_TASK_REQUEST(true);\r\n      let tasks = await axios.put(\"/api/task\", payload, {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"token\") }\r\n      });\r\n      if (tasks) {\r\n        action.FETCH_TASKS_START({ activityId: activity_id });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      action.EDIT_TASK_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  }),\r\n  DELETE_TASK_START: thunk(async (action, payload) => {\r\n    try {\r\n      let { report_id, activity_id, date } = payload;\r\n      action.EDIT_TASK_REQUEST(true);\r\n      let tasks = await axios.delete(\r\n        `/reports/task/${report_id}/date/${date}`,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.getItem(\"token\")\r\n          }\r\n        }\r\n      );\r\n      if (tasks) {\r\n        action.FETCH_TASKS_START({ activityId: activity_id });\r\n      }\r\n    } catch (error) {\r\n      console.log(\r\n        error ? (error.response ? error.response.data : error) : error\r\n      );\r\n      action.EDIT_TASK_ERROR({\r\n        message: \"Unexpected failure, check your network or contact the server\"\r\n      });\r\n    }\r\n  })\r\n};\r\n\r\n// updateComment: thunk(async (action, payload) => {\r\n//   try {\r\n//     await axios.post(`/reports/${payload.reportid}/comment`, payload, {\r\n//       headers: {\r\n//         \"x-auth-token\": localStorage.getItem(\"token\")\r\n//       }\r\n//     });\r\n//   } catch (err) {}\r\n// })\r\n","import React from \"react\";\r\nimport { createStore, StoreProvider } from \"easy-peasy\";\r\nimport Main from \"./components/Main/Main\";\r\nimport initStore from \"./models/store\";\r\n\r\nconst store = createStore(initStore);\r\n\r\nfunction App() {\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <Main />\r\n    </StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}